/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */


import type { FieldAuthorizeResolver } from "nexus/dist/plugins/fieldAuthorizePlugin"
import type { core } from "nexus"
declare global {
  interface NexusGenCustomInputMethods<TypeName extends string> {
    /**
     * The `Upload` scalar type represents a file upload.
     */
    upload<FieldName extends string>(fieldName: FieldName, opts?: core.CommonInputFieldConfig<TypeName, FieldName>): void // "Upload";
    /**
     * The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
     */
    json<FieldName extends string>(fieldName: FieldName, opts?: core.CommonInputFieldConfig<TypeName, FieldName>): void // "JSON";
  }
}
declare global {
  interface NexusGenCustomOutputMethods<TypeName extends string> {
    /**
     * The `Upload` scalar type represents a file upload.
     */
    upload<FieldName extends string>(fieldName: FieldName, ...opts: core.ScalarOutSpread<TypeName, FieldName>): void // "Upload";
    /**
     * The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
     */
    json<FieldName extends string>(fieldName: FieldName, ...opts: core.ScalarOutSpread<TypeName, FieldName>): void // "JSON";
  }
}


declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  AssignSubmissionInput: { // input type
    ownerId: string; // String!
    submissionId: string; // String!
  }
  ThreadMessageCreateInput: { // input type
    articleId: string; // String!
    headId?: string | null; // String
    type: string; // String!
  }
  ThreadMessagesInput: { // input type
    after?: string | null; // String
    articleId: string; // String!
    headId?: string | null; // String
  }
  UserArticlesInput: { // input type
    after?: string | null; // String
    limit?: number | null; // Int
    userId: string; // String!
  }
  UserReviewsInput: { // input type
    after?: string | null; // String
    limit?: number | null; // Int
    userId: string; // String!
  }
  VenueArticlesInput: { // input type
    after?: string | null; // String
    headId?: string | null; // String
    venueId: string; // String!
  }
  VenueCreateInput: { // input type
    abbreviation?: string | null; // String
    name: string; // String!
    venueDate?: NexusGenScalars['DateTime'] | null; // DateTime
  }
  VenueMembershipsCreateInput: { // input type
    role: string; // String!
    userIds: Array<string | null>; // [String]!
    venueId: string; // String!
  }
  VenueMembershipsInput: { // input type
    after?: string | null; // String
    headId?: string | null; // String
    role: string; // String!
    venueId: string; // String!
  }
  VenueSubmissionsInput: { // input type
    after?: string | null; // String
    headId?: string | null; // String
    venueId: string; // String!
  }
  VenueUpdateInput: { // input type
    abbreviation?: string | null; // String
    acceptingSubmissions?: boolean | null; // Boolean
    description?: string | null; // String
    name?: string | null; // String
    reviewTemplate?: string | null; // String
    submissionDeadline?: NexusGenScalars['DateTime'] | null; // DateTime
    venueDate?: NexusGenScalars['DateTime'] | null; // DateTime
    venueId: string; // String!
  }
}

export interface NexusGenEnums {
  RelationType: "ADVISEE" | "ADVISOR" | "COAUTHOR" | "COWORKER" | "FAMILY" | "SOCIAL"
  Role: "ACTION_EDITOR" | "ADMIN" | "NONE"
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
  DateTime: any
  JSON: any
  Upload: any
}

export interface NexusGenObjects {
  Article: { // root type
    abstract?: string | null; // String
    anonymous?: boolean | null; // Boolean
    id?: string | null; // String
    title?: string | null; // String
  }
  ArticleVersion: { // root type
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    id?: string | null; // String
    ref?: string | null; // String
    versionNumber?: number | null; // Int
  }
  Mutation: {};
  Query: {};
  Relation: { // root type
    endYear?: string | null; // String
    id?: string | null; // String
    relation?: string | null; // String
  }
  ReviewRequest: { // root type
    id?: string | null; // String
    status?: string | null; // String
  }
  Submission: { // root type
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    id?: string | null; // String
  }
  ThreadMessage: { // root type
    body?: string | null; // String
    decision?: boolean | null; // Boolean
    headId?: string | null; // String
    highlights?: NexusGenScalars['JSON'] | null; // JSON
    id?: string | null; // String
    publishTimestamp?: NexusGenScalars['DateTime'] | null; // DateTime
    published?: boolean | null; // Boolean
    rating?: number | null; // Int
    released?: boolean | null; // Boolean
    type?: string | null; // String
  }
  User: { // root type
    email?: string | null; // String
    id?: string | null; // String
    institution?: string | null; // String
    name?: string | null; // String
    profilePictureUrl?: string | null; // String
    twitter?: string | null; // String
    website?: string | null; // String
  }
  Venue: { // root type
    abbreviation?: string | null; // String
    acceptingSubmissions?: boolean | null; // Boolean
    description?: string | null; // String
    id?: string | null; // String
    logoRef?: string | null; // String
    name?: string | null; // String
    ratingFields?: NexusGenScalars['JSON'] | null; // JSON
    reviewTemplate?: string | null; // String
    submissionDeadline?: NexusGenScalars['DateTime'] | null; // DateTime
    venueDate?: NexusGenScalars['DateTime'] | null; // DateTime
    websiteUrl?: string | null; // String
  }
  VenueMembership: { // root type
    id?: string | null; // String
    role?: string | null; // String
  }
}

export interface NexusGenInterfaces {
}

export interface NexusGenUnions {
}

export type NexusGenRootTypes = NexusGenObjects

export type NexusGenAllTypes = NexusGenRootTypes & NexusGenScalars & NexusGenEnums

export interface NexusGenFieldTypes {
  Article: { // field return type
    abstract: string | null; // String
    acceptedVenues: Array<NexusGenRootTypes['Venue'] | null> | null; // [Venue]
    anonymous: boolean | null; // Boolean
    authors: Array<NexusGenRootTypes['User'] | null> | null; // [User]
    id: string | null; // String
    title: string | null; // String
    versions: Array<NexusGenRootTypes['ArticleVersion'] | null>; // [ArticleVersion]!
  }
  ArticleVersion: { // field return type
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    id: string | null; // String
    ref: string | null; // String
    versionNumber: number | null; // Int
  }
  Mutation: { // field return type
    assignSubmissionOwner: NexusGenRootTypes['Submission'] | null; // Submission
    createArticle: NexusGenRootTypes['Article'] | null; // Article
    createThreadMessage: NexusGenRootTypes['ThreadMessage'] | null; // ThreadMessage
    createVenue: NexusGenRootTypes['Venue'] | null; // Venue
    createVenueMemberships: Array<NexusGenRootTypes['VenueMembership'] | null> | null; // [VenueMembership]
    deleteVenueMembership: NexusGenRootTypes['VenueMembership'] | null; // VenueMembership
    publishMessage: NexusGenRootTypes['ThreadMessage'] | null; // ThreadMessage
    updateVenue: NexusGenRootTypes['Venue'] | null; // Venue
  }
  Query: { // field return type
    article: NexusGenRootTypes['Article'] | null; // Article
    draftMessage: NexusGenRootTypes['ThreadMessage'] | null; // ThreadMessage
    feedArticles: Array<NexusGenRootTypes['Article'] | null> | null; // [Article]
    reviewerAssignedSubmissions: Array<NexusGenRootTypes['Submission'] | null> | null; // [Submission]
    searchEditors: Array<NexusGenRootTypes['User'] | null> | null; // [User]
    searchOpenVenues: Array<NexusGenRootTypes['Venue'] | null> | null; // [Venue]
    searchUsers: Array<NexusGenRootTypes['User'] | null> | null; // [User]
    submissionOwnerCandidates: Array<NexusGenRootTypes['User'] | null> | null; // [User]
    threadMessages: Array<NexusGenRootTypes['ThreadMessage'] | null> | null; // [ThreadMessage]
    user: NexusGenRootTypes['User'] | null; // User
    userArticles: Array<NexusGenRootTypes['Article'] | null> | null; // [Article]
    userReviews: Array<NexusGenRootTypes['ThreadMessage'] | null> | null; // [ThreadMessage]
    venue: NexusGenRootTypes['Venue'] | null; // Venue
    venueArticles: Array<NexusGenRootTypes['Article'] | null> | null; // [Article]
    venueMemberships: Array<NexusGenRootTypes['VenueMembership'] | null> | null; // [VenueMembership]
    venueSubmissions: Array<NexusGenRootTypes['Submission'] | null> | null; // [Submission]
    venues: Array<NexusGenRootTypes['Venue'] | null> | null; // [Venue]
  }
  Relation: { // field return type
    endYear: string | null; // String
    id: string | null; // String
    relation: string | null; // String
    target: NexusGenRootTypes['User'] | null; // User
  }
  ReviewRequest: { // field return type
    id: string | null; // String
    status: string | null; // String
    user: NexusGenRootTypes['User'] | null; // User
  }
  Submission: { // field return type
    article: NexusGenRootTypes['Article'] | null; // Article
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    id: string | null; // String
    owner: NexusGenRootTypes['User'] | null; // User
    reviewRequests: Array<NexusGenRootTypes['ReviewRequest'] | null> | null; // [ReviewRequest]
    venue: NexusGenRootTypes['Venue'] | null; // Venue
  }
  ThreadMessage: { // field return type
    article: NexusGenRootTypes['Article'] | null; // Article
    author: NexusGenRootTypes['User'] | null; // User
    body: string | null; // String
    decision: boolean | null; // Boolean
    headId: string | null; // String
    highlights: NexusGenScalars['JSON'] | null; // JSON
    id: string | null; // String
    publishTimestamp: NexusGenScalars['DateTime'] | null; // DateTime
    published: boolean | null; // Boolean
    rating: number | null; // Int
    released: boolean | null; // Boolean
    type: string | null; // String
    venue: NexusGenRootTypes['Venue'] | null; // Venue
  }
  User: { // field return type
    email: string | null; // String
    id: string | null; // String
    institution: string | null; // String
    name: string | null; // String
    profilePictureUrl: string | null; // String
    twitter: string | null; // String
    website: string | null; // String
  }
  Venue: { // field return type
    abbreviation: string | null; // String
    acceptingSubmissions: boolean | null; // Boolean
    description: string | null; // String
    id: string | null; // String
    logoRef: string | null; // String
    name: string | null; // String
    ratingFields: NexusGenScalars['JSON'] | null; // JSON
    reviewTemplate: string | null; // String
    role: NexusGenEnums['Role'] | null; // Role
    submissionDeadline: NexusGenScalars['DateTime'] | null; // DateTime
    venueDate: NexusGenScalars['DateTime'] | null; // DateTime
    websiteUrl: string | null; // String
  }
  VenueMembership: { // field return type
    id: string | null; // String
    role: string | null; // String
    user: NexusGenRootTypes['User'] | null; // User
    venue: NexusGenRootTypes['Venue'] | null; // Venue
  }
}

export interface NexusGenFieldTypeNames {
  Article: { // field return type name
    abstract: 'String'
    acceptedVenues: 'Venue'
    anonymous: 'Boolean'
    authors: 'User'
    id: 'String'
    title: 'String'
    versions: 'ArticleVersion'
  }
  ArticleVersion: { // field return type name
    createdAt: 'DateTime'
    id: 'String'
    ref: 'String'
    versionNumber: 'Int'
  }
  Mutation: { // field return type name
    assignSubmissionOwner: 'Submission'
    createArticle: 'Article'
    createThreadMessage: 'ThreadMessage'
    createVenue: 'Venue'
    createVenueMemberships: 'VenueMembership'
    deleteVenueMembership: 'VenueMembership'
    publishMessage: 'ThreadMessage'
    updateVenue: 'Venue'
  }
  Query: { // field return type name
    article: 'Article'
    draftMessage: 'ThreadMessage'
    feedArticles: 'Article'
    reviewerAssignedSubmissions: 'Submission'
    searchEditors: 'User'
    searchOpenVenues: 'Venue'
    searchUsers: 'User'
    submissionOwnerCandidates: 'User'
    threadMessages: 'ThreadMessage'
    user: 'User'
    userArticles: 'Article'
    userReviews: 'ThreadMessage'
    venue: 'Venue'
    venueArticles: 'Article'
    venueMemberships: 'VenueMembership'
    venueSubmissions: 'Submission'
    venues: 'Venue'
  }
  Relation: { // field return type name
    endYear: 'String'
    id: 'String'
    relation: 'String'
    target: 'User'
  }
  ReviewRequest: { // field return type name
    id: 'String'
    status: 'String'
    user: 'User'
  }
  Submission: { // field return type name
    article: 'Article'
    createdAt: 'DateTime'
    id: 'String'
    owner: 'User'
    reviewRequests: 'ReviewRequest'
    venue: 'Venue'
  }
  ThreadMessage: { // field return type name
    article: 'Article'
    author: 'User'
    body: 'String'
    decision: 'Boolean'
    headId: 'String'
    highlights: 'JSON'
    id: 'String'
    publishTimestamp: 'DateTime'
    published: 'Boolean'
    rating: 'Int'
    released: 'Boolean'
    type: 'String'
    venue: 'Venue'
  }
  User: { // field return type name
    email: 'String'
    id: 'String'
    institution: 'String'
    name: 'String'
    profilePictureUrl: 'String'
    twitter: 'String'
    website: 'String'
  }
  Venue: { // field return type name
    abbreviation: 'String'
    acceptingSubmissions: 'Boolean'
    description: 'String'
    id: 'String'
    logoRef: 'String'
    name: 'String'
    ratingFields: 'JSON'
    reviewTemplate: 'String'
    role: 'Role'
    submissionDeadline: 'DateTime'
    venueDate: 'DateTime'
    websiteUrl: 'String'
  }
  VenueMembership: { // field return type name
    id: 'String'
    role: 'String'
    user: 'User'
    venue: 'Venue'
  }
}

export interface NexusGenArgTypes {
  Mutation: {
    assignSubmissionOwner: { // args
      input: NexusGenInputs['AssignSubmissionInput']; // AssignSubmissionInput!
    }
    createArticle: { // args
      abstract: string; // String!
      anonymous: boolean; // Boolean!
      authorIds: string[]; // [String!]!
      ref: string; // String!
      title: string; // String!
      venueId?: string | null; // String
    }
    createThreadMessage: { // args
      input: NexusGenInputs['ThreadMessageCreateInput']; // ThreadMessageCreateInput!
    }
    createVenue: { // args
      input?: NexusGenInputs['VenueCreateInput'] | null; // VenueCreateInput
    }
    createVenueMemberships: { // args
      input?: NexusGenInputs['VenueMembershipsCreateInput'] | null; // VenueMembershipsCreateInput
    }
    deleteVenueMembership: { // args
      id?: string | null; // String
    }
    publishMessage: { // args
      body: string; // String!
      highlights: NexusGenScalars['JSON']; // JSON!
      id: string; // String!
    }
    updateVenue: { // args
      input?: NexusGenInputs['VenueUpdateInput'] | null; // VenueUpdateInput
    }
  }
  Query: {
    article: { // args
      id?: string | null; // String
    }
    draftMessage: { // args
      articleId?: string | null; // String
      headId?: string | null; // String
      type?: string | null; // String
    }
    searchEditors: { // args
      organizationId: string; // String!
      query?: string | null; // String
    }
    searchOpenVenues: { // args
      query?: string | null; // String
    }
    searchUsers: { // args
      query?: string | null; // String
    }
    submissionOwnerCandidates: { // args
      venueId?: string | null; // String
    }
    threadMessages: { // args
      input?: NexusGenInputs['ThreadMessagesInput'] | null; // ThreadMessagesInput
    }
    user: { // args
      id?: string | null; // String
    }
    userArticles: { // args
      input?: NexusGenInputs['UserArticlesInput'] | null; // UserArticlesInput
    }
    userReviews: { // args
      input?: NexusGenInputs['UserReviewsInput'] | null; // UserReviewsInput
    }
    venue: { // args
      id?: string | null; // String
    }
    venueArticles: { // args
      input?: NexusGenInputs['VenueArticlesInput'] | null; // VenueArticlesInput
    }
    venueMemberships: { // args
      input?: NexusGenInputs['VenueMembershipsInput'] | null; // VenueMembershipsInput
    }
    venueSubmissions: { // args
      input?: NexusGenInputs['VenueSubmissionsInput'] | null; // VenueSubmissionsInput
    }
  }
}

export interface NexusGenAbstractTypeMembers {
}

export interface NexusGenTypeInterfaces {
}

export type NexusGenObjectNames = keyof NexusGenObjects;

export type NexusGenInputNames = keyof NexusGenInputs;

export type NexusGenEnumNames = keyof NexusGenEnums;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = keyof NexusGenScalars;

export type NexusGenUnionNames = never;

export type NexusGenObjectsUsingAbstractStrategyIsTypeOf = never;

export type NexusGenAbstractsUsingStrategyResolveType = never;

export type NexusGenFeaturesConfig = {
  abstractTypeStrategies: {
    isTypeOf: false
    resolveType: true
    __typename: false
  }
}

export interface NexusGenTypes {
  context: any;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  inputTypeShapes: NexusGenInputs & NexusGenEnums & NexusGenScalars;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  typeInterfaces: NexusGenTypeInterfaces;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractTypeMembers: NexusGenAbstractTypeMembers;
  objectsUsingAbstractStrategyIsTypeOf: NexusGenObjectsUsingAbstractStrategyIsTypeOf;
  abstractsUsingStrategyResolveType: NexusGenAbstractsUsingStrategyResolveType;
  features: NexusGenFeaturesConfig;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginInputTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
    /**
     * Authorization for an individual field. Returning "true"
     * or "Promise<true>" means the field can be accessed.
     * Returning "false" or "Promise<false>" will respond
     * with a "Not Authorized" error for the field.
     * Returning or throwing an error will also prevent the
     * resolver from executing.
     */
    authorize?: FieldAuthorizeResolver<TypeName, FieldName>
  }
  interface NexusGenPluginInputFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
  interface NexusGenPluginArgConfig {
  }
}