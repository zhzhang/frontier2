### This file was generated by Nexus Schema
### Do not make changes to this file directly


type Article {
  acceptedVenues: [Venue]
  anonymous: Boolean!
  authors: [User]
  id: String!
  reviews(after: ReviewWhereUniqueInput, before: ReviewWhereUniqueInput, first: Int, last: Int, where: ArticleReviewsWhereInput): [Review!]!
  title: String!
  versions: [ArticleVersion!]!
}

input ArticleCreateNestedOneWithoutAuthorsInput {
  connect: ArticleWhereUniqueInput
  connectOrCreate: ArticleCreateOrConnectWithoutAuthorsInput
  create: ArticleCreateWithoutAuthorsInput
}

input ArticleCreateNestedOneWithoutDecisionsInput {
  connect: ArticleWhereUniqueInput
  connectOrCreate: ArticleCreateOrConnectWithoutDecisionsInput
  create: ArticleCreateWithoutDecisionsInput
}

input ArticleCreateNestedOneWithoutReviewRequestInput {
  connect: ArticleWhereUniqueInput
  connectOrCreate: ArticleCreateOrConnectWithoutReviewRequestInput
  create: ArticleCreateWithoutReviewRequestInput
}

input ArticleCreateNestedOneWithoutReviewsInput {
  connect: ArticleWhereUniqueInput
  connectOrCreate: ArticleCreateOrConnectWithoutReviewsInput
  create: ArticleCreateWithoutReviewsInput
}

input ArticleCreateNestedOneWithoutSubmissionsInput {
  connect: ArticleWhereUniqueInput
  connectOrCreate: ArticleCreateOrConnectWithoutSubmissionsInput
  create: ArticleCreateWithoutSubmissionsInput
}

input ArticleCreateOrConnectWithoutAuthorsInput {
  create: ArticleCreateWithoutAuthorsInput!
  where: ArticleWhereUniqueInput!
}

input ArticleCreateOrConnectWithoutDecisionsInput {
  create: ArticleCreateWithoutDecisionsInput!
  where: ArticleWhereUniqueInput!
}

input ArticleCreateOrConnectWithoutReviewRequestInput {
  create: ArticleCreateWithoutReviewRequestInput!
  where: ArticleWhereUniqueInput!
}

input ArticleCreateOrConnectWithoutReviewsInput {
  create: ArticleCreateWithoutReviewsInput!
  where: ArticleWhereUniqueInput!
}

input ArticleCreateOrConnectWithoutSubmissionsInput {
  create: ArticleCreateWithoutSubmissionsInput!
  where: ArticleWhereUniqueInput!
}

input ArticleCreateWithoutAuthorsInput {
  ReviewRequest: ReviewRequestCreateNestedManyWithoutArticleInput
  anonymous: Boolean
  decisions: DecisionCreateNestedManyWithoutArticleInput
  id: String
  reviews: ReviewCreateNestedManyWithoutArticleInput
  submissions: SubmissionCreateNestedManyWithoutArticleInput
  title: String!
  versions: ArticleVersionCreateNestedManyWithoutArticleInput
}

input ArticleCreateWithoutDecisionsInput {
  ReviewRequest: ReviewRequestCreateNestedManyWithoutArticleInput
  anonymous: Boolean
  authors: AuthorshipCreateNestedManyWithoutArticleInput
  id: String
  reviews: ReviewCreateNestedManyWithoutArticleInput
  submissions: SubmissionCreateNestedManyWithoutArticleInput
  title: String!
  versions: ArticleVersionCreateNestedManyWithoutArticleInput
}

input ArticleCreateWithoutReviewRequestInput {
  anonymous: Boolean
  authors: AuthorshipCreateNestedManyWithoutArticleInput
  decisions: DecisionCreateNestedManyWithoutArticleInput
  id: String
  reviews: ReviewCreateNestedManyWithoutArticleInput
  submissions: SubmissionCreateNestedManyWithoutArticleInput
  title: String!
  versions: ArticleVersionCreateNestedManyWithoutArticleInput
}

input ArticleCreateWithoutReviewsInput {
  ReviewRequest: ReviewRequestCreateNestedManyWithoutArticleInput
  anonymous: Boolean
  authors: AuthorshipCreateNestedManyWithoutArticleInput
  decisions: DecisionCreateNestedManyWithoutArticleInput
  id: String
  submissions: SubmissionCreateNestedManyWithoutArticleInput
  title: String!
  versions: ArticleVersionCreateNestedManyWithoutArticleInput
}

input ArticleCreateWithoutSubmissionsInput {
  ReviewRequest: ReviewRequestCreateNestedManyWithoutArticleInput
  anonymous: Boolean
  authors: AuthorshipCreateNestedManyWithoutArticleInput
  decisions: DecisionCreateNestedManyWithoutArticleInput
  id: String
  reviews: ReviewCreateNestedManyWithoutArticleInput
  title: String!
  versions: ArticleVersionCreateNestedManyWithoutArticleInput
}

input ArticleReviewsWhereInput {
  published: BoolFilter
}

input ArticleUpdateOneRequiredWithoutAuthorsInput {
  connect: ArticleWhereUniqueInput
  connectOrCreate: ArticleCreateOrConnectWithoutAuthorsInput
  create: ArticleCreateWithoutAuthorsInput
  update: ArticleUpdateWithoutAuthorsInput
  upsert: ArticleUpsertWithoutAuthorsInput
}

input ArticleUpdateOneRequiredWithoutDecisionsInput {
  connect: ArticleWhereUniqueInput
  connectOrCreate: ArticleCreateOrConnectWithoutDecisionsInput
  create: ArticleCreateWithoutDecisionsInput
  update: ArticleUpdateWithoutDecisionsInput
  upsert: ArticleUpsertWithoutDecisionsInput
}

input ArticleUpdateOneRequiredWithoutReviewRequestInput {
  connect: ArticleWhereUniqueInput
  connectOrCreate: ArticleCreateOrConnectWithoutReviewRequestInput
  create: ArticleCreateWithoutReviewRequestInput
  update: ArticleUpdateWithoutReviewRequestInput
  upsert: ArticleUpsertWithoutReviewRequestInput
}

input ArticleUpdateOneRequiredWithoutReviewsInput {
  connect: ArticleWhereUniqueInput
  connectOrCreate: ArticleCreateOrConnectWithoutReviewsInput
  create: ArticleCreateWithoutReviewsInput
  update: ArticleUpdateWithoutReviewsInput
  upsert: ArticleUpsertWithoutReviewsInput
}

input ArticleUpdateOneRequiredWithoutSubmissionsInput {
  connect: ArticleWhereUniqueInput
  connectOrCreate: ArticleCreateOrConnectWithoutSubmissionsInput
  create: ArticleCreateWithoutSubmissionsInput
  update: ArticleUpdateWithoutSubmissionsInput
  upsert: ArticleUpsertWithoutSubmissionsInput
}

input ArticleUpdateWithoutAuthorsInput {
  ReviewRequest: ReviewRequestUpdateManyWithoutArticleInput
  anonymous: BoolFieldUpdateOperationsInput
  decisions: DecisionUpdateManyWithoutArticleInput
  id: StringFieldUpdateOperationsInput
  reviews: ReviewUpdateManyWithoutArticleInput
  submissions: SubmissionUpdateManyWithoutArticleInput
  title: StringFieldUpdateOperationsInput
  versions: ArticleVersionUpdateManyWithoutArticleInput
}

input ArticleUpdateWithoutDecisionsInput {
  ReviewRequest: ReviewRequestUpdateManyWithoutArticleInput
  anonymous: BoolFieldUpdateOperationsInput
  authors: AuthorshipUpdateManyWithoutArticleInput
  id: StringFieldUpdateOperationsInput
  reviews: ReviewUpdateManyWithoutArticleInput
  submissions: SubmissionUpdateManyWithoutArticleInput
  title: StringFieldUpdateOperationsInput
  versions: ArticleVersionUpdateManyWithoutArticleInput
}

input ArticleUpdateWithoutReviewRequestInput {
  anonymous: BoolFieldUpdateOperationsInput
  authors: AuthorshipUpdateManyWithoutArticleInput
  decisions: DecisionUpdateManyWithoutArticleInput
  id: StringFieldUpdateOperationsInput
  reviews: ReviewUpdateManyWithoutArticleInput
  submissions: SubmissionUpdateManyWithoutArticleInput
  title: StringFieldUpdateOperationsInput
  versions: ArticleVersionUpdateManyWithoutArticleInput
}

input ArticleUpdateWithoutReviewsInput {
  ReviewRequest: ReviewRequestUpdateManyWithoutArticleInput
  anonymous: BoolFieldUpdateOperationsInput
  authors: AuthorshipUpdateManyWithoutArticleInput
  decisions: DecisionUpdateManyWithoutArticleInput
  id: StringFieldUpdateOperationsInput
  submissions: SubmissionUpdateManyWithoutArticleInput
  title: StringFieldUpdateOperationsInput
  versions: ArticleVersionUpdateManyWithoutArticleInput
}

input ArticleUpdateWithoutSubmissionsInput {
  ReviewRequest: ReviewRequestUpdateManyWithoutArticleInput
  anonymous: BoolFieldUpdateOperationsInput
  authors: AuthorshipUpdateManyWithoutArticleInput
  decisions: DecisionUpdateManyWithoutArticleInput
  id: StringFieldUpdateOperationsInput
  reviews: ReviewUpdateManyWithoutArticleInput
  title: StringFieldUpdateOperationsInput
  versions: ArticleVersionUpdateManyWithoutArticleInput
}

input ArticleUpsertWithoutAuthorsInput {
  create: ArticleCreateWithoutAuthorsInput!
  update: ArticleUpdateWithoutAuthorsInput!
}

input ArticleUpsertWithoutDecisionsInput {
  create: ArticleCreateWithoutDecisionsInput!
  update: ArticleUpdateWithoutDecisionsInput!
}

input ArticleUpsertWithoutReviewRequestInput {
  create: ArticleCreateWithoutReviewRequestInput!
  update: ArticleUpdateWithoutReviewRequestInput!
}

input ArticleUpsertWithoutReviewsInput {
  create: ArticleCreateWithoutReviewsInput!
  update: ArticleUpdateWithoutReviewsInput!
}

input ArticleUpsertWithoutSubmissionsInput {
  create: ArticleCreateWithoutSubmissionsInput!
  update: ArticleUpdateWithoutSubmissionsInput!
}

type ArticleVersion {
  abstract: String!
  createdAt: DateTime!
  id: String!
  ref: String
  versionNumber: Int!
}

input ArticleVersionCreateManyArticleInput {
  abstract: String!
  createdAt: DateTime
  id: String
  ref: String
  versionNumber: Int!
}

input ArticleVersionCreateManyArticleInputEnvelope {
  data: [ArticleVersionCreateManyArticleInput!]
  skipDuplicates: Boolean
}

input ArticleVersionCreateNestedManyWithoutArticleInput {
  connect: [ArticleVersionWhereUniqueInput!]
  connectOrCreate: [ArticleVersionCreateOrConnectWithoutArticleInput!]
  create: [ArticleVersionCreateWithoutArticleInput!]
  createMany: ArticleVersionCreateManyArticleInputEnvelope
}

input ArticleVersionCreateOrConnectWithoutArticleInput {
  create: ArticleVersionCreateWithoutArticleInput!
  where: ArticleVersionWhereUniqueInput!
}

input ArticleVersionCreateWithoutArticleInput {
  abstract: String!
  createdAt: DateTime
  id: String
  ref: String
  versionNumber: Int!
}

input ArticleVersionListRelationFilter {
  every: ArticleVersionWhereInput
  none: ArticleVersionWhereInput
  some: ArticleVersionWhereInput
}

input ArticleVersionScalarWhereInput {
  AND: [ArticleVersionScalarWhereInput!]
  NOT: [ArticleVersionScalarWhereInput!]
  OR: [ArticleVersionScalarWhereInput!]
  abstract: StringFilter
  articleId: StringFilter
  createdAt: DateTimeFilter
  id: StringFilter
  ref: StringNullableFilter
  versionNumber: IntFilter
}

input ArticleVersionUpdateManyMutationInput {
  abstract: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  ref: NullableStringFieldUpdateOperationsInput
  versionNumber: IntFieldUpdateOperationsInput
}

input ArticleVersionUpdateManyWithWhereWithoutArticleInput {
  data: ArticleVersionUpdateManyMutationInput!
  where: ArticleVersionScalarWhereInput!
}

input ArticleVersionUpdateManyWithoutArticleInput {
  connect: [ArticleVersionWhereUniqueInput!]
  connectOrCreate: [ArticleVersionCreateOrConnectWithoutArticleInput!]
  create: [ArticleVersionCreateWithoutArticleInput!]
  createMany: ArticleVersionCreateManyArticleInputEnvelope
  delete: [ArticleVersionWhereUniqueInput!]
  deleteMany: [ArticleVersionScalarWhereInput!]
  disconnect: [ArticleVersionWhereUniqueInput!]
  set: [ArticleVersionWhereUniqueInput!]
  update: [ArticleVersionUpdateWithWhereUniqueWithoutArticleInput!]
  updateMany: [ArticleVersionUpdateManyWithWhereWithoutArticleInput!]
  upsert: [ArticleVersionUpsertWithWhereUniqueWithoutArticleInput!]
}

input ArticleVersionUpdateWithWhereUniqueWithoutArticleInput {
  data: ArticleVersionUpdateWithoutArticleInput!
  where: ArticleVersionWhereUniqueInput!
}

input ArticleVersionUpdateWithoutArticleInput {
  abstract: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  ref: NullableStringFieldUpdateOperationsInput
  versionNumber: IntFieldUpdateOperationsInput
}

input ArticleVersionUpsertWithWhereUniqueWithoutArticleInput {
  create: ArticleVersionCreateWithoutArticleInput!
  update: ArticleVersionUpdateWithoutArticleInput!
  where: ArticleVersionWhereUniqueInput!
}

input ArticleVersionWhereInput {
  AND: [ArticleVersionWhereInput!]
  NOT: [ArticleVersionWhereInput!]
  OR: [ArticleVersionWhereInput!]
  abstract: StringFilter
  article: ArticleWhereInput
  articleId: StringFilter
  createdAt: DateTimeFilter
  id: StringFilter
  ref: StringNullableFilter
  versionNumber: IntFilter
}

input ArticleVersionWhereUniqueInput {
  id: String
}

input ArticleWhereInput {
  AND: [ArticleWhereInput!]
  NOT: [ArticleWhereInput!]
  OR: [ArticleWhereInput!]
  ReviewRequest: ReviewRequestListRelationFilter
  anonymous: BoolFilter
  authors: AuthorshipListRelationFilter
  decisions: DecisionListRelationFilter
  id: StringFilter
  reviews: ReviewListRelationFilter
  submissions: SubmissionListRelationFilter
  title: StringFilter
  versions: ArticleVersionListRelationFilter
}

input ArticleWhereUniqueInput {
  id: String
}

type Authorship {
  article: Article!
  authorNumber: Int!
  id: Int!
  user: User!
}

input AuthorshipCreateManyArticleInput {
  authorNumber: Int!
  id: Int
  userId: String!
}

input AuthorshipCreateManyArticleInputEnvelope {
  data: [AuthorshipCreateManyArticleInput!]
  skipDuplicates: Boolean
}

input AuthorshipCreateManyUserInput {
  articleId: String!
  authorNumber: Int!
  id: Int
}

input AuthorshipCreateManyUserInputEnvelope {
  data: [AuthorshipCreateManyUserInput!]
  skipDuplicates: Boolean
}

input AuthorshipCreateNestedManyWithoutArticleInput {
  connect: [AuthorshipWhereUniqueInput!]
  connectOrCreate: [AuthorshipCreateOrConnectWithoutArticleInput!]
  create: [AuthorshipCreateWithoutArticleInput!]
  createMany: AuthorshipCreateManyArticleInputEnvelope
}

input AuthorshipCreateNestedManyWithoutUserInput {
  connect: [AuthorshipWhereUniqueInput!]
  connectOrCreate: [AuthorshipCreateOrConnectWithoutUserInput!]
  create: [AuthorshipCreateWithoutUserInput!]
  createMany: AuthorshipCreateManyUserInputEnvelope
}

input AuthorshipCreateOrConnectWithoutArticleInput {
  create: AuthorshipCreateWithoutArticleInput!
  where: AuthorshipWhereUniqueInput!
}

input AuthorshipCreateOrConnectWithoutUserInput {
  create: AuthorshipCreateWithoutUserInput!
  where: AuthorshipWhereUniqueInput!
}

input AuthorshipCreateWithoutArticleInput {
  authorNumber: Int!
  user: UserCreateNestedOneWithoutAuthorshipsInput!
}

input AuthorshipCreateWithoutUserInput {
  article: ArticleCreateNestedOneWithoutAuthorsInput!
  authorNumber: Int!
}

input AuthorshipListRelationFilter {
  every: AuthorshipWhereInput
  none: AuthorshipWhereInput
  some: AuthorshipWhereInput
}

input AuthorshipScalarWhereInput {
  AND: [AuthorshipScalarWhereInput!]
  NOT: [AuthorshipScalarWhereInput!]
  OR: [AuthorshipScalarWhereInput!]
  articleId: StringFilter
  authorNumber: IntFilter
  id: IntFilter
  userId: StringFilter
}

input AuthorshipUpdateManyMutationInput {
  authorNumber: IntFieldUpdateOperationsInput
}

input AuthorshipUpdateManyWithWhereWithoutArticleInput {
  data: AuthorshipUpdateManyMutationInput!
  where: AuthorshipScalarWhereInput!
}

input AuthorshipUpdateManyWithWhereWithoutUserInput {
  data: AuthorshipUpdateManyMutationInput!
  where: AuthorshipScalarWhereInput!
}

input AuthorshipUpdateManyWithoutArticleInput {
  connect: [AuthorshipWhereUniqueInput!]
  connectOrCreate: [AuthorshipCreateOrConnectWithoutArticleInput!]
  create: [AuthorshipCreateWithoutArticleInput!]
  createMany: AuthorshipCreateManyArticleInputEnvelope
  delete: [AuthorshipWhereUniqueInput!]
  deleteMany: [AuthorshipScalarWhereInput!]
  disconnect: [AuthorshipWhereUniqueInput!]
  set: [AuthorshipWhereUniqueInput!]
  update: [AuthorshipUpdateWithWhereUniqueWithoutArticleInput!]
  updateMany: [AuthorshipUpdateManyWithWhereWithoutArticleInput!]
  upsert: [AuthorshipUpsertWithWhereUniqueWithoutArticleInput!]
}

input AuthorshipUpdateManyWithoutUserInput {
  connect: [AuthorshipWhereUniqueInput!]
  connectOrCreate: [AuthorshipCreateOrConnectWithoutUserInput!]
  create: [AuthorshipCreateWithoutUserInput!]
  createMany: AuthorshipCreateManyUserInputEnvelope
  delete: [AuthorshipWhereUniqueInput!]
  deleteMany: [AuthorshipScalarWhereInput!]
  disconnect: [AuthorshipWhereUniqueInput!]
  set: [AuthorshipWhereUniqueInput!]
  update: [AuthorshipUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [AuthorshipUpdateManyWithWhereWithoutUserInput!]
  upsert: [AuthorshipUpsertWithWhereUniqueWithoutUserInput!]
}

input AuthorshipUpdateWithWhereUniqueWithoutArticleInput {
  data: AuthorshipUpdateWithoutArticleInput!
  where: AuthorshipWhereUniqueInput!
}

input AuthorshipUpdateWithWhereUniqueWithoutUserInput {
  data: AuthorshipUpdateWithoutUserInput!
  where: AuthorshipWhereUniqueInput!
}

input AuthorshipUpdateWithoutArticleInput {
  authorNumber: IntFieldUpdateOperationsInput
  user: UserUpdateOneRequiredWithoutAuthorshipsInput
}

input AuthorshipUpdateWithoutUserInput {
  article: ArticleUpdateOneRequiredWithoutAuthorsInput
  authorNumber: IntFieldUpdateOperationsInput
}

input AuthorshipUpsertWithWhereUniqueWithoutArticleInput {
  create: AuthorshipCreateWithoutArticleInput!
  update: AuthorshipUpdateWithoutArticleInput!
  where: AuthorshipWhereUniqueInput!
}

input AuthorshipUpsertWithWhereUniqueWithoutUserInput {
  create: AuthorshipCreateWithoutUserInput!
  update: AuthorshipUpdateWithoutUserInput!
  where: AuthorshipWhereUniqueInput!
}

input AuthorshipWhereInput {
  AND: [AuthorshipWhereInput!]
  NOT: [AuthorshipWhereInput!]
  OR: [AuthorshipWhereInput!]
  article: ArticleWhereInput
  articleId: StringFilter
  authorNumber: IntFilter
  id: IntFilter
  user: UserWhereInput
  userId: StringFilter
}

input AuthorshipWhereUniqueInput {
  id: Int
}

input BoolFieldUpdateOperationsInput {
  set: Boolean
}

input BoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

input DateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input DateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime!]
}

input DateTimeNullableFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeNullableFilter
  notIn: [DateTime!]
}

type Decision {
  article: Article!
  author: User!
  body: String!
  id: String!
}

input DecisionCreateManyArticleInput {
  authorId: String!
  body: String!
  decision: Boolean
  highlights: Json!
  id: String
  published: Boolean
  venueId: String!
}

input DecisionCreateManyArticleInputEnvelope {
  data: [DecisionCreateManyArticleInput!]
  skipDuplicates: Boolean
}

input DecisionCreateManyAuthorInput {
  articleId: String!
  body: String!
  decision: Boolean
  highlights: Json!
  id: String
  published: Boolean
  venueId: String!
}

input DecisionCreateManyAuthorInputEnvelope {
  data: [DecisionCreateManyAuthorInput!]
  skipDuplicates: Boolean
}

input DecisionCreateManyVenueInput {
  articleId: String!
  authorId: String!
  body: String!
  decision: Boolean
  highlights: Json!
  id: String
  published: Boolean
}

input DecisionCreateManyVenueInputEnvelope {
  data: [DecisionCreateManyVenueInput!]
  skipDuplicates: Boolean
}

input DecisionCreateNestedManyWithoutArticleInput {
  connect: [DecisionWhereUniqueInput!]
  connectOrCreate: [DecisionCreateOrConnectWithoutArticleInput!]
  create: [DecisionCreateWithoutArticleInput!]
  createMany: DecisionCreateManyArticleInputEnvelope
}

input DecisionCreateNestedManyWithoutAuthorInput {
  connect: [DecisionWhereUniqueInput!]
  connectOrCreate: [DecisionCreateOrConnectWithoutAuthorInput!]
  create: [DecisionCreateWithoutAuthorInput!]
  createMany: DecisionCreateManyAuthorInputEnvelope
}

input DecisionCreateNestedManyWithoutVenueInput {
  connect: [DecisionWhereUniqueInput!]
  connectOrCreate: [DecisionCreateOrConnectWithoutVenueInput!]
  create: [DecisionCreateWithoutVenueInput!]
  createMany: DecisionCreateManyVenueInputEnvelope
}

input DecisionCreateNestedOneWithoutSubmissionInput {
  connect: DecisionWhereUniqueInput
  connectOrCreate: DecisionCreateOrConnectWithoutSubmissionInput
  create: DecisionCreateWithoutSubmissionInput
}

input DecisionCreateOrConnectWithoutArticleInput {
  create: DecisionCreateWithoutArticleInput!
  where: DecisionWhereUniqueInput!
}

input DecisionCreateOrConnectWithoutAuthorInput {
  create: DecisionCreateWithoutAuthorInput!
  where: DecisionWhereUniqueInput!
}

input DecisionCreateOrConnectWithoutSubmissionInput {
  create: DecisionCreateWithoutSubmissionInput!
  where: DecisionWhereUniqueInput!
}

input DecisionCreateOrConnectWithoutVenueInput {
  create: DecisionCreateWithoutVenueInput!
  where: DecisionWhereUniqueInput!
}

input DecisionCreateWithoutArticleInput {
  author: UserCreateNestedOneWithoutDecisionsInput!
  body: String!
  decision: Boolean
  highlights: Json!
  id: String
  published: Boolean
  submission: SubmissionCreateNestedOneWithoutDecisionInput
  venue: VenueCreateNestedOneWithoutDecisionsInput!
}

input DecisionCreateWithoutAuthorInput {
  article: ArticleCreateNestedOneWithoutDecisionsInput!
  body: String!
  decision: Boolean
  highlights: Json!
  id: String
  published: Boolean
  submission: SubmissionCreateNestedOneWithoutDecisionInput
  venue: VenueCreateNestedOneWithoutDecisionsInput!
}

input DecisionCreateWithoutSubmissionInput {
  article: ArticleCreateNestedOneWithoutDecisionsInput!
  author: UserCreateNestedOneWithoutDecisionsInput!
  body: String!
  decision: Boolean
  highlights: Json!
  id: String
  published: Boolean
  venue: VenueCreateNestedOneWithoutDecisionsInput!
}

input DecisionCreateWithoutVenueInput {
  article: ArticleCreateNestedOneWithoutDecisionsInput!
  author: UserCreateNestedOneWithoutDecisionsInput!
  body: String!
  decision: Boolean
  highlights: Json!
  id: String
  published: Boolean
  submission: SubmissionCreateNestedOneWithoutDecisionInput
}

input DecisionListRelationFilter {
  every: DecisionWhereInput
  none: DecisionWhereInput
  some: DecisionWhereInput
}

input DecisionScalarWhereInput {
  AND: [DecisionScalarWhereInput!]
  NOT: [DecisionScalarWhereInput!]
  OR: [DecisionScalarWhereInput!]
  articleId: StringFilter
  authorId: StringFilter
  body: StringFilter
  decision: BoolFilter
  id: StringFilter
  published: BoolFilter
  venueId: StringFilter
}

input DecisionUpdateManyMutationInput {
  body: StringFieldUpdateOperationsInput
  decision: BoolFieldUpdateOperationsInput
  highlights: Json
  id: StringFieldUpdateOperationsInput
  published: BoolFieldUpdateOperationsInput
}

input DecisionUpdateManyWithWhereWithoutArticleInput {
  data: DecisionUpdateManyMutationInput!
  where: DecisionScalarWhereInput!
}

input DecisionUpdateManyWithWhereWithoutAuthorInput {
  data: DecisionUpdateManyMutationInput!
  where: DecisionScalarWhereInput!
}

input DecisionUpdateManyWithWhereWithoutVenueInput {
  data: DecisionUpdateManyMutationInput!
  where: DecisionScalarWhereInput!
}

input DecisionUpdateManyWithoutArticleInput {
  connect: [DecisionWhereUniqueInput!]
  connectOrCreate: [DecisionCreateOrConnectWithoutArticleInput!]
  create: [DecisionCreateWithoutArticleInput!]
  createMany: DecisionCreateManyArticleInputEnvelope
  delete: [DecisionWhereUniqueInput!]
  deleteMany: [DecisionScalarWhereInput!]
  disconnect: [DecisionWhereUniqueInput!]
  set: [DecisionWhereUniqueInput!]
  update: [DecisionUpdateWithWhereUniqueWithoutArticleInput!]
  updateMany: [DecisionUpdateManyWithWhereWithoutArticleInput!]
  upsert: [DecisionUpsertWithWhereUniqueWithoutArticleInput!]
}

input DecisionUpdateManyWithoutAuthorInput {
  connect: [DecisionWhereUniqueInput!]
  connectOrCreate: [DecisionCreateOrConnectWithoutAuthorInput!]
  create: [DecisionCreateWithoutAuthorInput!]
  createMany: DecisionCreateManyAuthorInputEnvelope
  delete: [DecisionWhereUniqueInput!]
  deleteMany: [DecisionScalarWhereInput!]
  disconnect: [DecisionWhereUniqueInput!]
  set: [DecisionWhereUniqueInput!]
  update: [DecisionUpdateWithWhereUniqueWithoutAuthorInput!]
  updateMany: [DecisionUpdateManyWithWhereWithoutAuthorInput!]
  upsert: [DecisionUpsertWithWhereUniqueWithoutAuthorInput!]
}

input DecisionUpdateManyWithoutVenueInput {
  connect: [DecisionWhereUniqueInput!]
  connectOrCreate: [DecisionCreateOrConnectWithoutVenueInput!]
  create: [DecisionCreateWithoutVenueInput!]
  createMany: DecisionCreateManyVenueInputEnvelope
  delete: [DecisionWhereUniqueInput!]
  deleteMany: [DecisionScalarWhereInput!]
  disconnect: [DecisionWhereUniqueInput!]
  set: [DecisionWhereUniqueInput!]
  update: [DecisionUpdateWithWhereUniqueWithoutVenueInput!]
  updateMany: [DecisionUpdateManyWithWhereWithoutVenueInput!]
  upsert: [DecisionUpsertWithWhereUniqueWithoutVenueInput!]
}

input DecisionUpdateOneWithoutSubmissionInput {
  connect: DecisionWhereUniqueInput
  connectOrCreate: DecisionCreateOrConnectWithoutSubmissionInput
  create: DecisionCreateWithoutSubmissionInput
  delete: Boolean
  disconnect: Boolean
  update: DecisionUpdateWithoutSubmissionInput
  upsert: DecisionUpsertWithoutSubmissionInput
}

input DecisionUpdateWithWhereUniqueWithoutArticleInput {
  data: DecisionUpdateWithoutArticleInput!
  where: DecisionWhereUniqueInput!
}

input DecisionUpdateWithWhereUniqueWithoutAuthorInput {
  data: DecisionUpdateWithoutAuthorInput!
  where: DecisionWhereUniqueInput!
}

input DecisionUpdateWithWhereUniqueWithoutVenueInput {
  data: DecisionUpdateWithoutVenueInput!
  where: DecisionWhereUniqueInput!
}

input DecisionUpdateWithoutArticleInput {
  author: UserUpdateOneRequiredWithoutDecisionsInput
  body: StringFieldUpdateOperationsInput
  decision: BoolFieldUpdateOperationsInput
  highlights: Json
  id: StringFieldUpdateOperationsInput
  published: BoolFieldUpdateOperationsInput
  submission: SubmissionUpdateOneWithoutDecisionInput
  venue: VenueUpdateOneRequiredWithoutDecisionsInput
}

input DecisionUpdateWithoutAuthorInput {
  article: ArticleUpdateOneRequiredWithoutDecisionsInput
  body: StringFieldUpdateOperationsInput
  decision: BoolFieldUpdateOperationsInput
  highlights: Json
  id: StringFieldUpdateOperationsInput
  published: BoolFieldUpdateOperationsInput
  submission: SubmissionUpdateOneWithoutDecisionInput
  venue: VenueUpdateOneRequiredWithoutDecisionsInput
}

input DecisionUpdateWithoutSubmissionInput {
  article: ArticleUpdateOneRequiredWithoutDecisionsInput
  author: UserUpdateOneRequiredWithoutDecisionsInput
  body: StringFieldUpdateOperationsInput
  decision: BoolFieldUpdateOperationsInput
  highlights: Json
  id: StringFieldUpdateOperationsInput
  published: BoolFieldUpdateOperationsInput
  venue: VenueUpdateOneRequiredWithoutDecisionsInput
}

input DecisionUpdateWithoutVenueInput {
  article: ArticleUpdateOneRequiredWithoutDecisionsInput
  author: UserUpdateOneRequiredWithoutDecisionsInput
  body: StringFieldUpdateOperationsInput
  decision: BoolFieldUpdateOperationsInput
  highlights: Json
  id: StringFieldUpdateOperationsInput
  published: BoolFieldUpdateOperationsInput
  submission: SubmissionUpdateOneWithoutDecisionInput
}

input DecisionUpsertWithWhereUniqueWithoutArticleInput {
  create: DecisionCreateWithoutArticleInput!
  update: DecisionUpdateWithoutArticleInput!
  where: DecisionWhereUniqueInput!
}

input DecisionUpsertWithWhereUniqueWithoutAuthorInput {
  create: DecisionCreateWithoutAuthorInput!
  update: DecisionUpdateWithoutAuthorInput!
  where: DecisionWhereUniqueInput!
}

input DecisionUpsertWithWhereUniqueWithoutVenueInput {
  create: DecisionCreateWithoutVenueInput!
  update: DecisionUpdateWithoutVenueInput!
  where: DecisionWhereUniqueInput!
}

input DecisionUpsertWithoutSubmissionInput {
  create: DecisionCreateWithoutSubmissionInput!
  update: DecisionUpdateWithoutSubmissionInput!
}

input DecisionWhereInput {
  AND: [DecisionWhereInput!]
  NOT: [DecisionWhereInput!]
  OR: [DecisionWhereInput!]
  article: ArticleWhereInput
  articleId: StringFilter
  author: UserWhereInput
  authorId: StringFilter
  body: StringFilter
  decision: BoolFilter
  id: StringFilter
  published: BoolFilter
  submission: SubmissionWhereInput
  venue: VenueWhereInput
  venueId: StringFilter
}

input DecisionWhereUniqueInput {
  id: String
}

input EnumRelationTypeFieldUpdateOperationsInput {
  set: RelationType
}

input EnumRelationTypeFilter {
  equals: RelationType
  in: [RelationType!]
  not: NestedEnumRelationTypeFilter
  notIn: [RelationType!]
}

input IntFieldUpdateOperationsInput {
  decrement: Int
  divide: Int
  increment: Int
  multiply: Int
  set: Int
}

input IntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

scalar Json

type Mutation {
  createArticle(abstract: String!, anonymous: Boolean!, authorIds: [String!]!, ref: String!, title: String!, venueId: String): Article
  createOneRelation(data: RelationCreateInput!): Relation!
  createOneReview(data: ReviewCreateInput!): Review!
  createOneReviewRequest(data: ReviewRequestCreateInput!): ReviewRequest!
  createOneThreadMessage(data: ThreadMessageCreateInput!): ThreadMessage!
  createOneVenue(data: VenueCreateInput!): Venue!
  createOneVenueMembership(data: VenueMembershipCreateInput!): VenueMembership!
  deleteOneRelation(where: RelationWhereUniqueInput!): Relation
  deleteOneVenueMembership(where: VenueMembershipWhereUniqueInput!): VenueMembership
  updateOneReview(data: ReviewUpdateInput!, where: ReviewWhereUniqueInput!): Review
  updateOneSubmission(data: SubmissionUpdateInput!, where: SubmissionWhereUniqueInput!): Submission
  updateOneUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
  updateOneVenue(data: VenueUpdateInput!, where: VenueWhereUniqueInput!): Venue
  upsertOneThreadMessage(create: ThreadMessageCreateInput!, update: ThreadMessageUpdateInput!, where: ThreadMessageWhereUniqueInput!): ThreadMessage!
}

input NestedBoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

input NestedDateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime!]
}

input NestedDateTimeNullableFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeNullableFilter
  notIn: [DateTime!]
}

input NestedEnumRelationTypeFilter {
  equals: RelationType
  in: [RelationType!]
  not: NestedEnumRelationTypeFilter
  notIn: [RelationType!]
}

input NestedIntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

input NestedStringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input NestedStringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

input NullableDateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input NullableStringFieldUpdateOperationsInput {
  set: String
}

type Query {
  article(where: ArticleWhereUniqueInput!): Article
  articleVersions: [ArticleVersion]
  articles(after: ArticleWhereUniqueInput, before: ArticleWhereUniqueInput, first: Int, last: Int, where: ArticleWhereInput): [Article!]!
  authorships(after: AuthorshipWhereUniqueInput, before: AuthorshipWhereUniqueInput, first: Int, last: Int, where: AuthorshipWhereInput): [Authorship!]!
  decisions(after: DecisionWhereUniqueInput, before: DecisionWhereUniqueInput, first: Int, last: Int, where: DecisionWhereInput): [Decision!]!
  reviewRequests(after: ReviewRequestWhereUniqueInput, before: ReviewRequestWhereUniqueInput, first: Int, last: Int, where: ReviewRequestWhereInput): [ReviewRequest!]!
  reviewerAssignedSubmissions: [Submission]
  reviews(after: ReviewWhereUniqueInput, before: ReviewWhereUniqueInput, first: Int, last: Int, where: ReviewWhereInput): [Review!]!
  searchEditors(organizationId: String!, query: String): [User]
  searchOpenVenues(query: String): [Venue]
  searchUsers(query: String): [User]
  submissions(after: SubmissionWhereUniqueInput, before: SubmissionWhereUniqueInput, first: Int, last: Int, where: SubmissionWhereInput): [Submission!]!
  threadMessages(after: ThreadMessageWhereUniqueInput, before: ThreadMessageWhereUniqueInput, first: Int, last: Int, where: ThreadMessageWhereInput): [ThreadMessage!]!
  user(where: UserWhereUniqueInput!): User
  userReview(articleId: String!, userId: String!): Review
  venue(where: VenueWhereUniqueInput!): Venue
  venueMembership(where: VenueMembershipWhereUniqueInput!): VenueMembership
  venueMemberships(after: VenueMembershipWhereUniqueInput, before: VenueMembershipWhereUniqueInput, first: Int, last: Int, where: VenueMembershipWhereInput): [VenueMembership!]!
  venues(after: VenueWhereUniqueInput, before: VenueWhereUniqueInput, first: Int, last: Int, where: VenueWhereInput): [Venue!]!
}

type Relation {
  endYear: String!
  id: String!
  relation: RelationType!
  target: User!
}

input RelationCreateInput {
  endYear: String!
  id: String!
  relation: RelationType!
  target: UserCreateNestedOneWithoutRelationsAsTargetInput!
  user: UserCreateNestedOneWithoutRelationsInput!
}

input RelationCreateManyTargetInput {
  endYear: String!
  id: String!
  relation: RelationType!
  userId: String!
}

input RelationCreateManyTargetInputEnvelope {
  data: [RelationCreateManyTargetInput!]
  skipDuplicates: Boolean
}

input RelationCreateManyUserInput {
  endYear: String!
  id: String!
  relation: RelationType!
  targetId: String!
}

input RelationCreateManyUserInputEnvelope {
  data: [RelationCreateManyUserInput!]
  skipDuplicates: Boolean
}

input RelationCreateNestedManyWithoutTargetInput {
  connect: [RelationWhereUniqueInput!]
  connectOrCreate: [RelationCreateOrConnectWithoutTargetInput!]
  create: [RelationCreateWithoutTargetInput!]
  createMany: RelationCreateManyTargetInputEnvelope
}

input RelationCreateNestedManyWithoutUserInput {
  connect: [RelationWhereUniqueInput!]
  connectOrCreate: [RelationCreateOrConnectWithoutUserInput!]
  create: [RelationCreateWithoutUserInput!]
  createMany: RelationCreateManyUserInputEnvelope
}

input RelationCreateOrConnectWithoutTargetInput {
  create: RelationCreateWithoutTargetInput!
  where: RelationWhereUniqueInput!
}

input RelationCreateOrConnectWithoutUserInput {
  create: RelationCreateWithoutUserInput!
  where: RelationWhereUniqueInput!
}

input RelationCreateWithoutTargetInput {
  endYear: String!
  id: String!
  relation: RelationType!
  user: UserCreateNestedOneWithoutRelationsInput!
}

input RelationCreateWithoutUserInput {
  endYear: String!
  id: String!
  relation: RelationType!
  target: UserCreateNestedOneWithoutRelationsAsTargetInput!
}

input RelationListRelationFilter {
  every: RelationWhereInput
  none: RelationWhereInput
  some: RelationWhereInput
}

input RelationScalarWhereInput {
  AND: [RelationScalarWhereInput!]
  NOT: [RelationScalarWhereInput!]
  OR: [RelationScalarWhereInput!]
  endYear: StringFilter
  id: StringFilter
  relation: EnumRelationTypeFilter
  targetId: StringFilter
  userId: StringFilter
}

enum RelationType {
  ADVISEE
  ADVISOR
  COAUTHOR
  COWORKER
  FAMILY
  SOCIAL
}

input RelationUpdateManyMutationInput {
  endYear: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  relation: EnumRelationTypeFieldUpdateOperationsInput
}

input RelationUpdateManyWithWhereWithoutTargetInput {
  data: RelationUpdateManyMutationInput!
  where: RelationScalarWhereInput!
}

input RelationUpdateManyWithWhereWithoutUserInput {
  data: RelationUpdateManyMutationInput!
  where: RelationScalarWhereInput!
}

input RelationUpdateManyWithoutTargetInput {
  connect: [RelationWhereUniqueInput!]
  connectOrCreate: [RelationCreateOrConnectWithoutTargetInput!]
  create: [RelationCreateWithoutTargetInput!]
  createMany: RelationCreateManyTargetInputEnvelope
  delete: [RelationWhereUniqueInput!]
  deleteMany: [RelationScalarWhereInput!]
  disconnect: [RelationWhereUniqueInput!]
  set: [RelationWhereUniqueInput!]
  update: [RelationUpdateWithWhereUniqueWithoutTargetInput!]
  updateMany: [RelationUpdateManyWithWhereWithoutTargetInput!]
  upsert: [RelationUpsertWithWhereUniqueWithoutTargetInput!]
}

input RelationUpdateManyWithoutUserInput {
  connect: [RelationWhereUniqueInput!]
  connectOrCreate: [RelationCreateOrConnectWithoutUserInput!]
  create: [RelationCreateWithoutUserInput!]
  createMany: RelationCreateManyUserInputEnvelope
  delete: [RelationWhereUniqueInput!]
  deleteMany: [RelationScalarWhereInput!]
  disconnect: [RelationWhereUniqueInput!]
  set: [RelationWhereUniqueInput!]
  update: [RelationUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [RelationUpdateManyWithWhereWithoutUserInput!]
  upsert: [RelationUpsertWithWhereUniqueWithoutUserInput!]
}

input RelationUpdateWithWhereUniqueWithoutTargetInput {
  data: RelationUpdateWithoutTargetInput!
  where: RelationWhereUniqueInput!
}

input RelationUpdateWithWhereUniqueWithoutUserInput {
  data: RelationUpdateWithoutUserInput!
  where: RelationWhereUniqueInput!
}

input RelationUpdateWithoutTargetInput {
  endYear: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  relation: EnumRelationTypeFieldUpdateOperationsInput
  user: UserUpdateOneRequiredWithoutRelationsInput
}

input RelationUpdateWithoutUserInput {
  endYear: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  relation: EnumRelationTypeFieldUpdateOperationsInput
  target: UserUpdateOneRequiredWithoutRelationsAsTargetInput
}

input RelationUpsertWithWhereUniqueWithoutTargetInput {
  create: RelationCreateWithoutTargetInput!
  update: RelationUpdateWithoutTargetInput!
  where: RelationWhereUniqueInput!
}

input RelationUpsertWithWhereUniqueWithoutUserInput {
  create: RelationCreateWithoutUserInput!
  update: RelationUpdateWithoutUserInput!
  where: RelationWhereUniqueInput!
}

input RelationWhereInput {
  AND: [RelationWhereInput!]
  NOT: [RelationWhereInput!]
  OR: [RelationWhereInput!]
  endYear: StringFilter
  id: StringFilter
  relation: EnumRelationTypeFilter
  target: UserWhereInput
  targetId: StringFilter
  user: UserWhereInput
  userId: StringFilter
}

input RelationWhereUniqueInput {
  id: String
}

type Review {
  author: User!
  body: String!
  highlights: Json!
  id: String!
  publishTimestamp: DateTime
  published: Boolean!
  rating: Int!
}

input ReviewCreateInput {
  anonymized: Boolean
  article: ArticleCreateNestedOneWithoutReviewsInput!
  author: UserCreateNestedOneWithoutReviewsInput!
  body: String!
  highlights: Json!
  id: String
  publishTimestamp: DateTime
  published: Boolean
  rating: Int
}

input ReviewCreateManyArticleInput {
  anonymized: Boolean
  authorId: String!
  body: String!
  highlights: Json!
  id: String
  publishTimestamp: DateTime
  published: Boolean
  rating: Int
}

input ReviewCreateManyArticleInputEnvelope {
  data: [ReviewCreateManyArticleInput!]
  skipDuplicates: Boolean
}

input ReviewCreateManyAuthorInput {
  anonymized: Boolean
  articleId: String!
  body: String!
  highlights: Json!
  id: String
  publishTimestamp: DateTime
  published: Boolean
  rating: Int
}

input ReviewCreateManyAuthorInputEnvelope {
  data: [ReviewCreateManyAuthorInput!]
  skipDuplicates: Boolean
}

input ReviewCreateNestedManyWithoutArticleInput {
  connect: [ReviewWhereUniqueInput!]
  connectOrCreate: [ReviewCreateOrConnectWithoutArticleInput!]
  create: [ReviewCreateWithoutArticleInput!]
  createMany: ReviewCreateManyArticleInputEnvelope
}

input ReviewCreateNestedManyWithoutAuthorInput {
  connect: [ReviewWhereUniqueInput!]
  connectOrCreate: [ReviewCreateOrConnectWithoutAuthorInput!]
  create: [ReviewCreateWithoutAuthorInput!]
  createMany: ReviewCreateManyAuthorInputEnvelope
}

input ReviewCreateOrConnectWithoutArticleInput {
  create: ReviewCreateWithoutArticleInput!
  where: ReviewWhereUniqueInput!
}

input ReviewCreateOrConnectWithoutAuthorInput {
  create: ReviewCreateWithoutAuthorInput!
  where: ReviewWhereUniqueInput!
}

input ReviewCreateWithoutArticleInput {
  anonymized: Boolean
  author: UserCreateNestedOneWithoutReviewsInput!
  body: String!
  highlights: Json!
  id: String
  publishTimestamp: DateTime
  published: Boolean
  rating: Int
}

input ReviewCreateWithoutAuthorInput {
  anonymized: Boolean
  article: ArticleCreateNestedOneWithoutReviewsInput!
  body: String!
  highlights: Json!
  id: String
  publishTimestamp: DateTime
  published: Boolean
  rating: Int
}

input ReviewListRelationFilter {
  every: ReviewWhereInput
  none: ReviewWhereInput
  some: ReviewWhereInput
}

type ReviewRequest {
  article: Article!
  id: String!
  status: String!
  submission: Submission
  user: User!
}

input ReviewRequestCreateInput {
  article: ArticleCreateNestedOneWithoutReviewRequestInput!
  id: String
  status: String!
  submission: SubmissionCreateNestedOneWithoutReviewRequestsInput
  user: UserCreateNestedOneWithoutReviewRequestsInput!
}

input ReviewRequestCreateManyArticleInput {
  id: String
  status: String!
  submissionId: String
  userId: String!
}

input ReviewRequestCreateManyArticleInputEnvelope {
  data: [ReviewRequestCreateManyArticleInput!]
  skipDuplicates: Boolean
}

input ReviewRequestCreateManySubmissionInput {
  articleId: String!
  id: String
  status: String!
  userId: String!
}

input ReviewRequestCreateManySubmissionInputEnvelope {
  data: [ReviewRequestCreateManySubmissionInput!]
  skipDuplicates: Boolean
}

input ReviewRequestCreateManyUserInput {
  articleId: String!
  id: String
  status: String!
  submissionId: String
}

input ReviewRequestCreateManyUserInputEnvelope {
  data: [ReviewRequestCreateManyUserInput!]
  skipDuplicates: Boolean
}

input ReviewRequestCreateNestedManyWithoutArticleInput {
  connect: [ReviewRequestWhereUniqueInput!]
  connectOrCreate: [ReviewRequestCreateOrConnectWithoutArticleInput!]
  create: [ReviewRequestCreateWithoutArticleInput!]
  createMany: ReviewRequestCreateManyArticleInputEnvelope
}

input ReviewRequestCreateNestedManyWithoutSubmissionInput {
  connect: [ReviewRequestWhereUniqueInput!]
  connectOrCreate: [ReviewRequestCreateOrConnectWithoutSubmissionInput!]
  create: [ReviewRequestCreateWithoutSubmissionInput!]
  createMany: ReviewRequestCreateManySubmissionInputEnvelope
}

input ReviewRequestCreateNestedManyWithoutUserInput {
  connect: [ReviewRequestWhereUniqueInput!]
  connectOrCreate: [ReviewRequestCreateOrConnectWithoutUserInput!]
  create: [ReviewRequestCreateWithoutUserInput!]
  createMany: ReviewRequestCreateManyUserInputEnvelope
}

input ReviewRequestCreateOrConnectWithoutArticleInput {
  create: ReviewRequestCreateWithoutArticleInput!
  where: ReviewRequestWhereUniqueInput!
}

input ReviewRequestCreateOrConnectWithoutSubmissionInput {
  create: ReviewRequestCreateWithoutSubmissionInput!
  where: ReviewRequestWhereUniqueInput!
}

input ReviewRequestCreateOrConnectWithoutUserInput {
  create: ReviewRequestCreateWithoutUserInput!
  where: ReviewRequestWhereUniqueInput!
}

input ReviewRequestCreateWithoutArticleInput {
  id: String
  status: String!
  submission: SubmissionCreateNestedOneWithoutReviewRequestsInput
  user: UserCreateNestedOneWithoutReviewRequestsInput!
}

input ReviewRequestCreateWithoutSubmissionInput {
  article: ArticleCreateNestedOneWithoutReviewRequestInput!
  id: String
  status: String!
  user: UserCreateNestedOneWithoutReviewRequestsInput!
}

input ReviewRequestCreateWithoutUserInput {
  article: ArticleCreateNestedOneWithoutReviewRequestInput!
  id: String
  status: String!
  submission: SubmissionCreateNestedOneWithoutReviewRequestsInput
}

input ReviewRequestListRelationFilter {
  every: ReviewRequestWhereInput
  none: ReviewRequestWhereInput
  some: ReviewRequestWhereInput
}

input ReviewRequestScalarWhereInput {
  AND: [ReviewRequestScalarWhereInput!]
  NOT: [ReviewRequestScalarWhereInput!]
  OR: [ReviewRequestScalarWhereInput!]
  articleId: StringFilter
  id: StringFilter
  status: StringFilter
  submissionId: StringNullableFilter
  userId: StringFilter
}

input ReviewRequestUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  status: StringFieldUpdateOperationsInput
}

input ReviewRequestUpdateManyWithWhereWithoutArticleInput {
  data: ReviewRequestUpdateManyMutationInput!
  where: ReviewRequestScalarWhereInput!
}

input ReviewRequestUpdateManyWithWhereWithoutSubmissionInput {
  data: ReviewRequestUpdateManyMutationInput!
  where: ReviewRequestScalarWhereInput!
}

input ReviewRequestUpdateManyWithWhereWithoutUserInput {
  data: ReviewRequestUpdateManyMutationInput!
  where: ReviewRequestScalarWhereInput!
}

input ReviewRequestUpdateManyWithoutArticleInput {
  connect: [ReviewRequestWhereUniqueInput!]
  connectOrCreate: [ReviewRequestCreateOrConnectWithoutArticleInput!]
  create: [ReviewRequestCreateWithoutArticleInput!]
  createMany: ReviewRequestCreateManyArticleInputEnvelope
  delete: [ReviewRequestWhereUniqueInput!]
  deleteMany: [ReviewRequestScalarWhereInput!]
  disconnect: [ReviewRequestWhereUniqueInput!]
  set: [ReviewRequestWhereUniqueInput!]
  update: [ReviewRequestUpdateWithWhereUniqueWithoutArticleInput!]
  updateMany: [ReviewRequestUpdateManyWithWhereWithoutArticleInput!]
  upsert: [ReviewRequestUpsertWithWhereUniqueWithoutArticleInput!]
}

input ReviewRequestUpdateManyWithoutSubmissionInput {
  connect: [ReviewRequestWhereUniqueInput!]
  connectOrCreate: [ReviewRequestCreateOrConnectWithoutSubmissionInput!]
  create: [ReviewRequestCreateWithoutSubmissionInput!]
  createMany: ReviewRequestCreateManySubmissionInputEnvelope
  delete: [ReviewRequestWhereUniqueInput!]
  deleteMany: [ReviewRequestScalarWhereInput!]
  disconnect: [ReviewRequestWhereUniqueInput!]
  set: [ReviewRequestWhereUniqueInput!]
  update: [ReviewRequestUpdateWithWhereUniqueWithoutSubmissionInput!]
  updateMany: [ReviewRequestUpdateManyWithWhereWithoutSubmissionInput!]
  upsert: [ReviewRequestUpsertWithWhereUniqueWithoutSubmissionInput!]
}

input ReviewRequestUpdateManyWithoutUserInput {
  connect: [ReviewRequestWhereUniqueInput!]
  connectOrCreate: [ReviewRequestCreateOrConnectWithoutUserInput!]
  create: [ReviewRequestCreateWithoutUserInput!]
  createMany: ReviewRequestCreateManyUserInputEnvelope
  delete: [ReviewRequestWhereUniqueInput!]
  deleteMany: [ReviewRequestScalarWhereInput!]
  disconnect: [ReviewRequestWhereUniqueInput!]
  set: [ReviewRequestWhereUniqueInput!]
  update: [ReviewRequestUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [ReviewRequestUpdateManyWithWhereWithoutUserInput!]
  upsert: [ReviewRequestUpsertWithWhereUniqueWithoutUserInput!]
}

input ReviewRequestUpdateWithWhereUniqueWithoutArticleInput {
  data: ReviewRequestUpdateWithoutArticleInput!
  where: ReviewRequestWhereUniqueInput!
}

input ReviewRequestUpdateWithWhereUniqueWithoutSubmissionInput {
  data: ReviewRequestUpdateWithoutSubmissionInput!
  where: ReviewRequestWhereUniqueInput!
}

input ReviewRequestUpdateWithWhereUniqueWithoutUserInput {
  data: ReviewRequestUpdateWithoutUserInput!
  where: ReviewRequestWhereUniqueInput!
}

input ReviewRequestUpdateWithoutArticleInput {
  id: StringFieldUpdateOperationsInput
  status: StringFieldUpdateOperationsInput
  submission: SubmissionUpdateOneWithoutReviewRequestsInput
  user: UserUpdateOneRequiredWithoutReviewRequestsInput
}

input ReviewRequestUpdateWithoutSubmissionInput {
  article: ArticleUpdateOneRequiredWithoutReviewRequestInput
  id: StringFieldUpdateOperationsInput
  status: StringFieldUpdateOperationsInput
  user: UserUpdateOneRequiredWithoutReviewRequestsInput
}

input ReviewRequestUpdateWithoutUserInput {
  article: ArticleUpdateOneRequiredWithoutReviewRequestInput
  id: StringFieldUpdateOperationsInput
  status: StringFieldUpdateOperationsInput
  submission: SubmissionUpdateOneWithoutReviewRequestsInput
}

input ReviewRequestUpsertWithWhereUniqueWithoutArticleInput {
  create: ReviewRequestCreateWithoutArticleInput!
  update: ReviewRequestUpdateWithoutArticleInput!
  where: ReviewRequestWhereUniqueInput!
}

input ReviewRequestUpsertWithWhereUniqueWithoutSubmissionInput {
  create: ReviewRequestCreateWithoutSubmissionInput!
  update: ReviewRequestUpdateWithoutSubmissionInput!
  where: ReviewRequestWhereUniqueInput!
}

input ReviewRequestUpsertWithWhereUniqueWithoutUserInput {
  create: ReviewRequestCreateWithoutUserInput!
  update: ReviewRequestUpdateWithoutUserInput!
  where: ReviewRequestWhereUniqueInput!
}

input ReviewRequestWhereInput {
  AND: [ReviewRequestWhereInput!]
  NOT: [ReviewRequestWhereInput!]
  OR: [ReviewRequestWhereInput!]
  article: ArticleWhereInput
  articleId: StringFilter
  id: StringFilter
  status: StringFilter
  submission: SubmissionWhereInput
  submissionId: StringNullableFilter
  user: UserWhereInput
  userId: StringFilter
}

input ReviewRequestWhereUniqueInput {
  id: String
}

input ReviewScalarWhereInput {
  AND: [ReviewScalarWhereInput!]
  NOT: [ReviewScalarWhereInput!]
  OR: [ReviewScalarWhereInput!]
  anonymized: BoolFilter
  articleId: StringFilter
  authorId: StringFilter
  body: StringFilter
  id: StringFilter
  publishTimestamp: DateTimeNullableFilter
  published: BoolFilter
  rating: IntFilter
}

input ReviewUpdateInput {
  anonymized: BoolFieldUpdateOperationsInput
  article: ArticleUpdateOneRequiredWithoutReviewsInput
  author: UserUpdateOneRequiredWithoutReviewsInput
  body: StringFieldUpdateOperationsInput
  highlights: Json
  id: StringFieldUpdateOperationsInput
  publishTimestamp: NullableDateTimeFieldUpdateOperationsInput
  published: BoolFieldUpdateOperationsInput
  rating: IntFieldUpdateOperationsInput
}

input ReviewUpdateManyMutationInput {
  anonymized: BoolFieldUpdateOperationsInput
  body: StringFieldUpdateOperationsInput
  highlights: Json
  id: StringFieldUpdateOperationsInput
  publishTimestamp: NullableDateTimeFieldUpdateOperationsInput
  published: BoolFieldUpdateOperationsInput
  rating: IntFieldUpdateOperationsInput
}

input ReviewUpdateManyWithWhereWithoutArticleInput {
  data: ReviewUpdateManyMutationInput!
  where: ReviewScalarWhereInput!
}

input ReviewUpdateManyWithWhereWithoutAuthorInput {
  data: ReviewUpdateManyMutationInput!
  where: ReviewScalarWhereInput!
}

input ReviewUpdateManyWithoutArticleInput {
  connect: [ReviewWhereUniqueInput!]
  connectOrCreate: [ReviewCreateOrConnectWithoutArticleInput!]
  create: [ReviewCreateWithoutArticleInput!]
  createMany: ReviewCreateManyArticleInputEnvelope
  delete: [ReviewWhereUniqueInput!]
  deleteMany: [ReviewScalarWhereInput!]
  disconnect: [ReviewWhereUniqueInput!]
  set: [ReviewWhereUniqueInput!]
  update: [ReviewUpdateWithWhereUniqueWithoutArticleInput!]
  updateMany: [ReviewUpdateManyWithWhereWithoutArticleInput!]
  upsert: [ReviewUpsertWithWhereUniqueWithoutArticleInput!]
}

input ReviewUpdateManyWithoutAuthorInput {
  connect: [ReviewWhereUniqueInput!]
  connectOrCreate: [ReviewCreateOrConnectWithoutAuthorInput!]
  create: [ReviewCreateWithoutAuthorInput!]
  createMany: ReviewCreateManyAuthorInputEnvelope
  delete: [ReviewWhereUniqueInput!]
  deleteMany: [ReviewScalarWhereInput!]
  disconnect: [ReviewWhereUniqueInput!]
  set: [ReviewWhereUniqueInput!]
  update: [ReviewUpdateWithWhereUniqueWithoutAuthorInput!]
  updateMany: [ReviewUpdateManyWithWhereWithoutAuthorInput!]
  upsert: [ReviewUpsertWithWhereUniqueWithoutAuthorInput!]
}

input ReviewUpdateWithWhereUniqueWithoutArticleInput {
  data: ReviewUpdateWithoutArticleInput!
  where: ReviewWhereUniqueInput!
}

input ReviewUpdateWithWhereUniqueWithoutAuthorInput {
  data: ReviewUpdateWithoutAuthorInput!
  where: ReviewWhereUniqueInput!
}

input ReviewUpdateWithoutArticleInput {
  anonymized: BoolFieldUpdateOperationsInput
  author: UserUpdateOneRequiredWithoutReviewsInput
  body: StringFieldUpdateOperationsInput
  highlights: Json
  id: StringFieldUpdateOperationsInput
  publishTimestamp: NullableDateTimeFieldUpdateOperationsInput
  published: BoolFieldUpdateOperationsInput
  rating: IntFieldUpdateOperationsInput
}

input ReviewUpdateWithoutAuthorInput {
  anonymized: BoolFieldUpdateOperationsInput
  article: ArticleUpdateOneRequiredWithoutReviewsInput
  body: StringFieldUpdateOperationsInput
  highlights: Json
  id: StringFieldUpdateOperationsInput
  publishTimestamp: NullableDateTimeFieldUpdateOperationsInput
  published: BoolFieldUpdateOperationsInput
  rating: IntFieldUpdateOperationsInput
}

input ReviewUpsertWithWhereUniqueWithoutArticleInput {
  create: ReviewCreateWithoutArticleInput!
  update: ReviewUpdateWithoutArticleInput!
  where: ReviewWhereUniqueInput!
}

input ReviewUpsertWithWhereUniqueWithoutAuthorInput {
  create: ReviewCreateWithoutAuthorInput!
  update: ReviewUpdateWithoutAuthorInput!
  where: ReviewWhereUniqueInput!
}

input ReviewWhereInput {
  AND: [ReviewWhereInput!]
  NOT: [ReviewWhereInput!]
  OR: [ReviewWhereInput!]
  anonymized: BoolFilter
  article: ArticleWhereInput
  articleId: StringFilter
  author: UserWhereInput
  authorId: StringFilter
  body: StringFilter
  id: StringFilter
  publishTimestamp: DateTimeNullableFilter
  published: BoolFilter
  rating: IntFilter
}

input ReviewWhereUniqueInput {
  id: String
}

enum Role {
  ACTION_EDITOR
  ADMIN
  NONE
}

input StringFieldUpdateOperationsInput {
  set: String
}

input StringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input StringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

type Submission {
  article: Article!
  id: String!
  owner: User
  reviewRequests(after: ReviewRequestWhereUniqueInput, before: ReviewRequestWhereUniqueInput, first: Int, last: Int): [ReviewRequest!]!
  venue: Venue!
}

input SubmissionCreateManyArticleInput {
  createdAt: DateTime
  decisionId: String
  id: String
  ownerId: String
  venueId: String!
}

input SubmissionCreateManyArticleInputEnvelope {
  data: [SubmissionCreateManyArticleInput!]
  skipDuplicates: Boolean
}

input SubmissionCreateManyOwnerInput {
  articleId: String!
  createdAt: DateTime
  decisionId: String
  id: String
  venueId: String!
}

input SubmissionCreateManyOwnerInputEnvelope {
  data: [SubmissionCreateManyOwnerInput!]
  skipDuplicates: Boolean
}

input SubmissionCreateManyVenueInput {
  articleId: String!
  createdAt: DateTime
  decisionId: String
  id: String
  ownerId: String
}

input SubmissionCreateManyVenueInputEnvelope {
  data: [SubmissionCreateManyVenueInput!]
  skipDuplicates: Boolean
}

input SubmissionCreateNestedManyWithoutArticleInput {
  connect: [SubmissionWhereUniqueInput!]
  connectOrCreate: [SubmissionCreateOrConnectWithoutArticleInput!]
  create: [SubmissionCreateWithoutArticleInput!]
  createMany: SubmissionCreateManyArticleInputEnvelope
}

input SubmissionCreateNestedManyWithoutOwnerInput {
  connect: [SubmissionWhereUniqueInput!]
  connectOrCreate: [SubmissionCreateOrConnectWithoutOwnerInput!]
  create: [SubmissionCreateWithoutOwnerInput!]
  createMany: SubmissionCreateManyOwnerInputEnvelope
}

input SubmissionCreateNestedManyWithoutVenueInput {
  connect: [SubmissionWhereUniqueInput!]
  connectOrCreate: [SubmissionCreateOrConnectWithoutVenueInput!]
  create: [SubmissionCreateWithoutVenueInput!]
  createMany: SubmissionCreateManyVenueInputEnvelope
}

input SubmissionCreateNestedOneWithoutDecisionInput {
  connect: SubmissionWhereUniqueInput
  connectOrCreate: SubmissionCreateOrConnectWithoutDecisionInput
  create: SubmissionCreateWithoutDecisionInput
}

input SubmissionCreateNestedOneWithoutReviewRequestsInput {
  connect: SubmissionWhereUniqueInput
  connectOrCreate: SubmissionCreateOrConnectWithoutReviewRequestsInput
  create: SubmissionCreateWithoutReviewRequestsInput
}

input SubmissionCreateOrConnectWithoutArticleInput {
  create: SubmissionCreateWithoutArticleInput!
  where: SubmissionWhereUniqueInput!
}

input SubmissionCreateOrConnectWithoutDecisionInput {
  create: SubmissionCreateWithoutDecisionInput!
  where: SubmissionWhereUniqueInput!
}

input SubmissionCreateOrConnectWithoutOwnerInput {
  create: SubmissionCreateWithoutOwnerInput!
  where: SubmissionWhereUniqueInput!
}

input SubmissionCreateOrConnectWithoutReviewRequestsInput {
  create: SubmissionCreateWithoutReviewRequestsInput!
  where: SubmissionWhereUniqueInput!
}

input SubmissionCreateOrConnectWithoutVenueInput {
  create: SubmissionCreateWithoutVenueInput!
  where: SubmissionWhereUniqueInput!
}

input SubmissionCreateWithoutArticleInput {
  createdAt: DateTime
  decision: DecisionCreateNestedOneWithoutSubmissionInput
  id: String
  owner: UserCreateNestedOneWithoutChairSubmissionsInput
  reviewRequests: ReviewRequestCreateNestedManyWithoutSubmissionInput
  venue: VenueCreateNestedOneWithoutSubmissionsInput!
}

input SubmissionCreateWithoutDecisionInput {
  article: ArticleCreateNestedOneWithoutSubmissionsInput!
  createdAt: DateTime
  id: String
  owner: UserCreateNestedOneWithoutChairSubmissionsInput
  reviewRequests: ReviewRequestCreateNestedManyWithoutSubmissionInput
  venue: VenueCreateNestedOneWithoutSubmissionsInput!
}

input SubmissionCreateWithoutOwnerInput {
  article: ArticleCreateNestedOneWithoutSubmissionsInput!
  createdAt: DateTime
  decision: DecisionCreateNestedOneWithoutSubmissionInput
  id: String
  reviewRequests: ReviewRequestCreateNestedManyWithoutSubmissionInput
  venue: VenueCreateNestedOneWithoutSubmissionsInput!
}

input SubmissionCreateWithoutReviewRequestsInput {
  article: ArticleCreateNestedOneWithoutSubmissionsInput!
  createdAt: DateTime
  decision: DecisionCreateNestedOneWithoutSubmissionInput
  id: String
  owner: UserCreateNestedOneWithoutChairSubmissionsInput
  venue: VenueCreateNestedOneWithoutSubmissionsInput!
}

input SubmissionCreateWithoutVenueInput {
  article: ArticleCreateNestedOneWithoutSubmissionsInput!
  createdAt: DateTime
  decision: DecisionCreateNestedOneWithoutSubmissionInput
  id: String
  owner: UserCreateNestedOneWithoutChairSubmissionsInput
  reviewRequests: ReviewRequestCreateNestedManyWithoutSubmissionInput
}

input SubmissionListRelationFilter {
  every: SubmissionWhereInput
  none: SubmissionWhereInput
  some: SubmissionWhereInput
}

input SubmissionScalarWhereInput {
  AND: [SubmissionScalarWhereInput!]
  NOT: [SubmissionScalarWhereInput!]
  OR: [SubmissionScalarWhereInput!]
  articleId: StringFilter
  createdAt: DateTimeFilter
  decisionId: StringNullableFilter
  id: StringFilter
  ownerId: StringNullableFilter
  venueId: StringFilter
}

input SubmissionUpdateInput {
  article: ArticleUpdateOneRequiredWithoutSubmissionsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  decision: DecisionUpdateOneWithoutSubmissionInput
  id: StringFieldUpdateOperationsInput
  owner: UserUpdateOneWithoutChairSubmissionsInput
  reviewRequests: ReviewRequestUpdateManyWithoutSubmissionInput
  venue: VenueUpdateOneRequiredWithoutSubmissionsInput
}

input SubmissionUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
}

input SubmissionUpdateManyWithWhereWithoutArticleInput {
  data: SubmissionUpdateManyMutationInput!
  where: SubmissionScalarWhereInput!
}

input SubmissionUpdateManyWithWhereWithoutOwnerInput {
  data: SubmissionUpdateManyMutationInput!
  where: SubmissionScalarWhereInput!
}

input SubmissionUpdateManyWithWhereWithoutVenueInput {
  data: SubmissionUpdateManyMutationInput!
  where: SubmissionScalarWhereInput!
}

input SubmissionUpdateManyWithoutArticleInput {
  connect: [SubmissionWhereUniqueInput!]
  connectOrCreate: [SubmissionCreateOrConnectWithoutArticleInput!]
  create: [SubmissionCreateWithoutArticleInput!]
  createMany: SubmissionCreateManyArticleInputEnvelope
  delete: [SubmissionWhereUniqueInput!]
  deleteMany: [SubmissionScalarWhereInput!]
  disconnect: [SubmissionWhereUniqueInput!]
  set: [SubmissionWhereUniqueInput!]
  update: [SubmissionUpdateWithWhereUniqueWithoutArticleInput!]
  updateMany: [SubmissionUpdateManyWithWhereWithoutArticleInput!]
  upsert: [SubmissionUpsertWithWhereUniqueWithoutArticleInput!]
}

input SubmissionUpdateManyWithoutOwnerInput {
  connect: [SubmissionWhereUniqueInput!]
  connectOrCreate: [SubmissionCreateOrConnectWithoutOwnerInput!]
  create: [SubmissionCreateWithoutOwnerInput!]
  createMany: SubmissionCreateManyOwnerInputEnvelope
  delete: [SubmissionWhereUniqueInput!]
  deleteMany: [SubmissionScalarWhereInput!]
  disconnect: [SubmissionWhereUniqueInput!]
  set: [SubmissionWhereUniqueInput!]
  update: [SubmissionUpdateWithWhereUniqueWithoutOwnerInput!]
  updateMany: [SubmissionUpdateManyWithWhereWithoutOwnerInput!]
  upsert: [SubmissionUpsertWithWhereUniqueWithoutOwnerInput!]
}

input SubmissionUpdateManyWithoutVenueInput {
  connect: [SubmissionWhereUniqueInput!]
  connectOrCreate: [SubmissionCreateOrConnectWithoutVenueInput!]
  create: [SubmissionCreateWithoutVenueInput!]
  createMany: SubmissionCreateManyVenueInputEnvelope
  delete: [SubmissionWhereUniqueInput!]
  deleteMany: [SubmissionScalarWhereInput!]
  disconnect: [SubmissionWhereUniqueInput!]
  set: [SubmissionWhereUniqueInput!]
  update: [SubmissionUpdateWithWhereUniqueWithoutVenueInput!]
  updateMany: [SubmissionUpdateManyWithWhereWithoutVenueInput!]
  upsert: [SubmissionUpsertWithWhereUniqueWithoutVenueInput!]
}

input SubmissionUpdateOneWithoutDecisionInput {
  connect: SubmissionWhereUniqueInput
  connectOrCreate: SubmissionCreateOrConnectWithoutDecisionInput
  create: SubmissionCreateWithoutDecisionInput
  delete: Boolean
  disconnect: Boolean
  update: SubmissionUpdateWithoutDecisionInput
  upsert: SubmissionUpsertWithoutDecisionInput
}

input SubmissionUpdateOneWithoutReviewRequestsInput {
  connect: SubmissionWhereUniqueInput
  connectOrCreate: SubmissionCreateOrConnectWithoutReviewRequestsInput
  create: SubmissionCreateWithoutReviewRequestsInput
  delete: Boolean
  disconnect: Boolean
  update: SubmissionUpdateWithoutReviewRequestsInput
  upsert: SubmissionUpsertWithoutReviewRequestsInput
}

input SubmissionUpdateWithWhereUniqueWithoutArticleInput {
  data: SubmissionUpdateWithoutArticleInput!
  where: SubmissionWhereUniqueInput!
}

input SubmissionUpdateWithWhereUniqueWithoutOwnerInput {
  data: SubmissionUpdateWithoutOwnerInput!
  where: SubmissionWhereUniqueInput!
}

input SubmissionUpdateWithWhereUniqueWithoutVenueInput {
  data: SubmissionUpdateWithoutVenueInput!
  where: SubmissionWhereUniqueInput!
}

input SubmissionUpdateWithoutArticleInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  decision: DecisionUpdateOneWithoutSubmissionInput
  id: StringFieldUpdateOperationsInput
  owner: UserUpdateOneWithoutChairSubmissionsInput
  reviewRequests: ReviewRequestUpdateManyWithoutSubmissionInput
  venue: VenueUpdateOneRequiredWithoutSubmissionsInput
}

input SubmissionUpdateWithoutDecisionInput {
  article: ArticleUpdateOneRequiredWithoutSubmissionsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  owner: UserUpdateOneWithoutChairSubmissionsInput
  reviewRequests: ReviewRequestUpdateManyWithoutSubmissionInput
  venue: VenueUpdateOneRequiredWithoutSubmissionsInput
}

input SubmissionUpdateWithoutOwnerInput {
  article: ArticleUpdateOneRequiredWithoutSubmissionsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  decision: DecisionUpdateOneWithoutSubmissionInput
  id: StringFieldUpdateOperationsInput
  reviewRequests: ReviewRequestUpdateManyWithoutSubmissionInput
  venue: VenueUpdateOneRequiredWithoutSubmissionsInput
}

input SubmissionUpdateWithoutReviewRequestsInput {
  article: ArticleUpdateOneRequiredWithoutSubmissionsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  decision: DecisionUpdateOneWithoutSubmissionInput
  id: StringFieldUpdateOperationsInput
  owner: UserUpdateOneWithoutChairSubmissionsInput
  venue: VenueUpdateOneRequiredWithoutSubmissionsInput
}

input SubmissionUpdateWithoutVenueInput {
  article: ArticleUpdateOneRequiredWithoutSubmissionsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  decision: DecisionUpdateOneWithoutSubmissionInput
  id: StringFieldUpdateOperationsInput
  owner: UserUpdateOneWithoutChairSubmissionsInput
  reviewRequests: ReviewRequestUpdateManyWithoutSubmissionInput
}

input SubmissionUpsertWithWhereUniqueWithoutArticleInput {
  create: SubmissionCreateWithoutArticleInput!
  update: SubmissionUpdateWithoutArticleInput!
  where: SubmissionWhereUniqueInput!
}

input SubmissionUpsertWithWhereUniqueWithoutOwnerInput {
  create: SubmissionCreateWithoutOwnerInput!
  update: SubmissionUpdateWithoutOwnerInput!
  where: SubmissionWhereUniqueInput!
}

input SubmissionUpsertWithWhereUniqueWithoutVenueInput {
  create: SubmissionCreateWithoutVenueInput!
  update: SubmissionUpdateWithoutVenueInput!
  where: SubmissionWhereUniqueInput!
}

input SubmissionUpsertWithoutDecisionInput {
  create: SubmissionCreateWithoutDecisionInput!
  update: SubmissionUpdateWithoutDecisionInput!
}

input SubmissionUpsertWithoutReviewRequestsInput {
  create: SubmissionCreateWithoutReviewRequestsInput!
  update: SubmissionUpdateWithoutReviewRequestsInput!
}

input SubmissionWhereInput {
  AND: [SubmissionWhereInput!]
  NOT: [SubmissionWhereInput!]
  OR: [SubmissionWhereInput!]
  article: ArticleWhereInput
  articleId: StringFilter
  createdAt: DateTimeFilter
  decision: DecisionWhereInput
  decisionId: StringNullableFilter
  id: StringFilter
  owner: UserWhereInput
  ownerId: StringNullableFilter
  reviewRequests: ReviewRequestListRelationFilter
  venue: VenueWhereInput
  venueId: StringFilter
}

input SubmissionWhereUniqueInput {
  decisionId: String
  id: String
}

type ThreadMessage {
  author: User!
  body: String!
  createdAt: DateTime!
  highlights: Json!
  id: String!
}

input ThreadMessageCreateInput {
  articleId: String!
  author: UserCreateNestedOneWithoutThreadMessageInput!
  body: String!
  createdAt: DateTime
  headId: String
  highlights: Json!
  id: String
  published: Boolean
}

input ThreadMessageCreateManyAuthorInput {
  articleId: String!
  body: String!
  createdAt: DateTime
  headId: String
  highlights: Json!
  id: String
  published: Boolean
}

input ThreadMessageCreateManyAuthorInputEnvelope {
  data: [ThreadMessageCreateManyAuthorInput!]
  skipDuplicates: Boolean
}

input ThreadMessageCreateNestedManyWithoutAuthorInput {
  connect: [ThreadMessageWhereUniqueInput!]
  connectOrCreate: [ThreadMessageCreateOrConnectWithoutAuthorInput!]
  create: [ThreadMessageCreateWithoutAuthorInput!]
  createMany: ThreadMessageCreateManyAuthorInputEnvelope
}

input ThreadMessageCreateOrConnectWithoutAuthorInput {
  create: ThreadMessageCreateWithoutAuthorInput!
  where: ThreadMessageWhereUniqueInput!
}

input ThreadMessageCreateWithoutAuthorInput {
  articleId: String!
  body: String!
  createdAt: DateTime
  headId: String
  highlights: Json!
  id: String
  published: Boolean
}

input ThreadMessageListRelationFilter {
  every: ThreadMessageWhereInput
  none: ThreadMessageWhereInput
  some: ThreadMessageWhereInput
}

input ThreadMessageScalarWhereInput {
  AND: [ThreadMessageScalarWhereInput!]
  NOT: [ThreadMessageScalarWhereInput!]
  OR: [ThreadMessageScalarWhereInput!]
  articleId: StringFilter
  authorId: StringFilter
  body: StringFilter
  createdAt: DateTimeFilter
  headId: StringNullableFilter
  id: StringFilter
  published: BoolFilter
}

input ThreadMessageUpdateInput {
  articleId: StringFieldUpdateOperationsInput
  author: UserUpdateOneRequiredWithoutThreadMessageInput
  body: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  headId: NullableStringFieldUpdateOperationsInput
  highlights: Json
  id: StringFieldUpdateOperationsInput
  published: BoolFieldUpdateOperationsInput
}

input ThreadMessageUpdateManyMutationInput {
  articleId: StringFieldUpdateOperationsInput
  body: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  headId: NullableStringFieldUpdateOperationsInput
  highlights: Json
  id: StringFieldUpdateOperationsInput
  published: BoolFieldUpdateOperationsInput
}

input ThreadMessageUpdateManyWithWhereWithoutAuthorInput {
  data: ThreadMessageUpdateManyMutationInput!
  where: ThreadMessageScalarWhereInput!
}

input ThreadMessageUpdateManyWithoutAuthorInput {
  connect: [ThreadMessageWhereUniqueInput!]
  connectOrCreate: [ThreadMessageCreateOrConnectWithoutAuthorInput!]
  create: [ThreadMessageCreateWithoutAuthorInput!]
  createMany: ThreadMessageCreateManyAuthorInputEnvelope
  delete: [ThreadMessageWhereUniqueInput!]
  deleteMany: [ThreadMessageScalarWhereInput!]
  disconnect: [ThreadMessageWhereUniqueInput!]
  set: [ThreadMessageWhereUniqueInput!]
  update: [ThreadMessageUpdateWithWhereUniqueWithoutAuthorInput!]
  updateMany: [ThreadMessageUpdateManyWithWhereWithoutAuthorInput!]
  upsert: [ThreadMessageUpsertWithWhereUniqueWithoutAuthorInput!]
}

input ThreadMessageUpdateWithWhereUniqueWithoutAuthorInput {
  data: ThreadMessageUpdateWithoutAuthorInput!
  where: ThreadMessageWhereUniqueInput!
}

input ThreadMessageUpdateWithoutAuthorInput {
  articleId: StringFieldUpdateOperationsInput
  body: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  headId: NullableStringFieldUpdateOperationsInput
  highlights: Json
  id: StringFieldUpdateOperationsInput
  published: BoolFieldUpdateOperationsInput
}

input ThreadMessageUpsertWithWhereUniqueWithoutAuthorInput {
  create: ThreadMessageCreateWithoutAuthorInput!
  update: ThreadMessageUpdateWithoutAuthorInput!
  where: ThreadMessageWhereUniqueInput!
}

input ThreadMessageWhereInput {
  AND: [ThreadMessageWhereInput!]
  NOT: [ThreadMessageWhereInput!]
  OR: [ThreadMessageWhereInput!]
  articleId: StringFilter
  author: UserWhereInput
  authorId: StringFilter
  body: StringFilter
  createdAt: DateTimeFilter
  headId: StringNullableFilter
  id: StringFilter
  published: BoolFilter
}

input ThreadMessageWhereUniqueInput {
  id: String
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

type User {
  articles: [Article]
  bio: String!
  email: String!
  id: String!
  name: String!
  profilePictureUrl: String
  relations(after: RelationWhereUniqueInput, before: RelationWhereUniqueInput, first: Int, last: Int): [Relation!]!
  relationsAsTarget(after: RelationWhereUniqueInput, before: RelationWhereUniqueInput, first: Int, last: Int): [Relation!]!
}

input UserCreateNestedOneWithoutAuthorshipsInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutAuthorshipsInput
  create: UserCreateWithoutAuthorshipsInput
}

input UserCreateNestedOneWithoutChairSubmissionsInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutChairSubmissionsInput
  create: UserCreateWithoutChairSubmissionsInput
}

input UserCreateNestedOneWithoutDecisionsInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutDecisionsInput
  create: UserCreateWithoutDecisionsInput
}

input UserCreateNestedOneWithoutRelationsAsTargetInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutRelationsAsTargetInput
  create: UserCreateWithoutRelationsAsTargetInput
}

input UserCreateNestedOneWithoutRelationsInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutRelationsInput
  create: UserCreateWithoutRelationsInput
}

input UserCreateNestedOneWithoutReviewRequestsInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutReviewRequestsInput
  create: UserCreateWithoutReviewRequestsInput
}

input UserCreateNestedOneWithoutReviewsInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutReviewsInput
  create: UserCreateWithoutReviewsInput
}

input UserCreateNestedOneWithoutThreadMessageInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutThreadMessageInput
  create: UserCreateWithoutThreadMessageInput
}

input UserCreateNestedOneWithoutVenueMembershipsInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutVenueMembershipsInput
  create: UserCreateWithoutVenueMembershipsInput
}

input UserCreateOrConnectWithoutAuthorshipsInput {
  create: UserCreateWithoutAuthorshipsInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutChairSubmissionsInput {
  create: UserCreateWithoutChairSubmissionsInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutDecisionsInput {
  create: UserCreateWithoutDecisionsInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutRelationsAsTargetInput {
  create: UserCreateWithoutRelationsAsTargetInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutRelationsInput {
  create: UserCreateWithoutRelationsInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutReviewRequestsInput {
  create: UserCreateWithoutReviewRequestsInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutReviewsInput {
  create: UserCreateWithoutReviewsInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutThreadMessageInput {
  create: UserCreateWithoutThreadMessageInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutVenueMembershipsInput {
  create: UserCreateWithoutVenueMembershipsInput!
  where: UserWhereUniqueInput!
}

input UserCreateWithoutAuthorshipsInput {
  bio: String
  chairSubmissions: SubmissionCreateNestedManyWithoutOwnerInput
  decisions: DecisionCreateNestedManyWithoutAuthorInput
  email: String!
  id: String!
  name: String!
  profilePictureUrl: String
  relations: RelationCreateNestedManyWithoutUserInput
  relationsAsTarget: RelationCreateNestedManyWithoutTargetInput
  reviewRequests: ReviewRequestCreateNestedManyWithoutUserInput
  reviews: ReviewCreateNestedManyWithoutAuthorInput
  threadMessage: ThreadMessageCreateNestedManyWithoutAuthorInput
  venueMemberships: VenueMembershipCreateNestedManyWithoutUserInput
}

input UserCreateWithoutChairSubmissionsInput {
  authorships: AuthorshipCreateNestedManyWithoutUserInput
  bio: String
  decisions: DecisionCreateNestedManyWithoutAuthorInput
  email: String!
  id: String!
  name: String!
  profilePictureUrl: String
  relations: RelationCreateNestedManyWithoutUserInput
  relationsAsTarget: RelationCreateNestedManyWithoutTargetInput
  reviewRequests: ReviewRequestCreateNestedManyWithoutUserInput
  reviews: ReviewCreateNestedManyWithoutAuthorInput
  threadMessage: ThreadMessageCreateNestedManyWithoutAuthorInput
  venueMemberships: VenueMembershipCreateNestedManyWithoutUserInput
}

input UserCreateWithoutDecisionsInput {
  authorships: AuthorshipCreateNestedManyWithoutUserInput
  bio: String
  chairSubmissions: SubmissionCreateNestedManyWithoutOwnerInput
  email: String!
  id: String!
  name: String!
  profilePictureUrl: String
  relations: RelationCreateNestedManyWithoutUserInput
  relationsAsTarget: RelationCreateNestedManyWithoutTargetInput
  reviewRequests: ReviewRequestCreateNestedManyWithoutUserInput
  reviews: ReviewCreateNestedManyWithoutAuthorInput
  threadMessage: ThreadMessageCreateNestedManyWithoutAuthorInput
  venueMemberships: VenueMembershipCreateNestedManyWithoutUserInput
}

input UserCreateWithoutRelationsAsTargetInput {
  authorships: AuthorshipCreateNestedManyWithoutUserInput
  bio: String
  chairSubmissions: SubmissionCreateNestedManyWithoutOwnerInput
  decisions: DecisionCreateNestedManyWithoutAuthorInput
  email: String!
  id: String!
  name: String!
  profilePictureUrl: String
  relations: RelationCreateNestedManyWithoutUserInput
  reviewRequests: ReviewRequestCreateNestedManyWithoutUserInput
  reviews: ReviewCreateNestedManyWithoutAuthorInput
  threadMessage: ThreadMessageCreateNestedManyWithoutAuthorInput
  venueMemberships: VenueMembershipCreateNestedManyWithoutUserInput
}

input UserCreateWithoutRelationsInput {
  authorships: AuthorshipCreateNestedManyWithoutUserInput
  bio: String
  chairSubmissions: SubmissionCreateNestedManyWithoutOwnerInput
  decisions: DecisionCreateNestedManyWithoutAuthorInput
  email: String!
  id: String!
  name: String!
  profilePictureUrl: String
  relationsAsTarget: RelationCreateNestedManyWithoutTargetInput
  reviewRequests: ReviewRequestCreateNestedManyWithoutUserInput
  reviews: ReviewCreateNestedManyWithoutAuthorInput
  threadMessage: ThreadMessageCreateNestedManyWithoutAuthorInput
  venueMemberships: VenueMembershipCreateNestedManyWithoutUserInput
}

input UserCreateWithoutReviewRequestsInput {
  authorships: AuthorshipCreateNestedManyWithoutUserInput
  bio: String
  chairSubmissions: SubmissionCreateNestedManyWithoutOwnerInput
  decisions: DecisionCreateNestedManyWithoutAuthorInput
  email: String!
  id: String!
  name: String!
  profilePictureUrl: String
  relations: RelationCreateNestedManyWithoutUserInput
  relationsAsTarget: RelationCreateNestedManyWithoutTargetInput
  reviews: ReviewCreateNestedManyWithoutAuthorInput
  threadMessage: ThreadMessageCreateNestedManyWithoutAuthorInput
  venueMemberships: VenueMembershipCreateNestedManyWithoutUserInput
}

input UserCreateWithoutReviewsInput {
  authorships: AuthorshipCreateNestedManyWithoutUserInput
  bio: String
  chairSubmissions: SubmissionCreateNestedManyWithoutOwnerInput
  decisions: DecisionCreateNestedManyWithoutAuthorInput
  email: String!
  id: String!
  name: String!
  profilePictureUrl: String
  relations: RelationCreateNestedManyWithoutUserInput
  relationsAsTarget: RelationCreateNestedManyWithoutTargetInput
  reviewRequests: ReviewRequestCreateNestedManyWithoutUserInput
  threadMessage: ThreadMessageCreateNestedManyWithoutAuthorInput
  venueMemberships: VenueMembershipCreateNestedManyWithoutUserInput
}

input UserCreateWithoutThreadMessageInput {
  authorships: AuthorshipCreateNestedManyWithoutUserInput
  bio: String
  chairSubmissions: SubmissionCreateNestedManyWithoutOwnerInput
  decisions: DecisionCreateNestedManyWithoutAuthorInput
  email: String!
  id: String!
  name: String!
  profilePictureUrl: String
  relations: RelationCreateNestedManyWithoutUserInput
  relationsAsTarget: RelationCreateNestedManyWithoutTargetInput
  reviewRequests: ReviewRequestCreateNestedManyWithoutUserInput
  reviews: ReviewCreateNestedManyWithoutAuthorInput
  venueMemberships: VenueMembershipCreateNestedManyWithoutUserInput
}

input UserCreateWithoutVenueMembershipsInput {
  authorships: AuthorshipCreateNestedManyWithoutUserInput
  bio: String
  chairSubmissions: SubmissionCreateNestedManyWithoutOwnerInput
  decisions: DecisionCreateNestedManyWithoutAuthorInput
  email: String!
  id: String!
  name: String!
  profilePictureUrl: String
  relations: RelationCreateNestedManyWithoutUserInput
  relationsAsTarget: RelationCreateNestedManyWithoutTargetInput
  reviewRequests: ReviewRequestCreateNestedManyWithoutUserInput
  reviews: ReviewCreateNestedManyWithoutAuthorInput
  threadMessage: ThreadMessageCreateNestedManyWithoutAuthorInput
}

input UserUpdateInput {
  authorships: AuthorshipUpdateManyWithoutUserInput
  bio: StringFieldUpdateOperationsInput
  chairSubmissions: SubmissionUpdateManyWithoutOwnerInput
  decisions: DecisionUpdateManyWithoutAuthorInput
  email: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  profilePictureUrl: NullableStringFieldUpdateOperationsInput
  relations: RelationUpdateManyWithoutUserInput
  relationsAsTarget: RelationUpdateManyWithoutTargetInput
  reviewRequests: ReviewRequestUpdateManyWithoutUserInput
  reviews: ReviewUpdateManyWithoutAuthorInput
  threadMessage: ThreadMessageUpdateManyWithoutAuthorInput
  venueMemberships: VenueMembershipUpdateManyWithoutUserInput
}

input UserUpdateOneRequiredWithoutAuthorshipsInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutAuthorshipsInput
  create: UserCreateWithoutAuthorshipsInput
  update: UserUpdateWithoutAuthorshipsInput
  upsert: UserUpsertWithoutAuthorshipsInput
}

input UserUpdateOneRequiredWithoutDecisionsInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutDecisionsInput
  create: UserCreateWithoutDecisionsInput
  update: UserUpdateWithoutDecisionsInput
  upsert: UserUpsertWithoutDecisionsInput
}

input UserUpdateOneRequiredWithoutRelationsAsTargetInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutRelationsAsTargetInput
  create: UserCreateWithoutRelationsAsTargetInput
  update: UserUpdateWithoutRelationsAsTargetInput
  upsert: UserUpsertWithoutRelationsAsTargetInput
}

input UserUpdateOneRequiredWithoutRelationsInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutRelationsInput
  create: UserCreateWithoutRelationsInput
  update: UserUpdateWithoutRelationsInput
  upsert: UserUpsertWithoutRelationsInput
}

input UserUpdateOneRequiredWithoutReviewRequestsInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutReviewRequestsInput
  create: UserCreateWithoutReviewRequestsInput
  update: UserUpdateWithoutReviewRequestsInput
  upsert: UserUpsertWithoutReviewRequestsInput
}

input UserUpdateOneRequiredWithoutReviewsInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutReviewsInput
  create: UserCreateWithoutReviewsInput
  update: UserUpdateWithoutReviewsInput
  upsert: UserUpsertWithoutReviewsInput
}

input UserUpdateOneRequiredWithoutThreadMessageInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutThreadMessageInput
  create: UserCreateWithoutThreadMessageInput
  update: UserUpdateWithoutThreadMessageInput
  upsert: UserUpsertWithoutThreadMessageInput
}

input UserUpdateOneRequiredWithoutVenueMembershipsInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutVenueMembershipsInput
  create: UserCreateWithoutVenueMembershipsInput
  update: UserUpdateWithoutVenueMembershipsInput
  upsert: UserUpsertWithoutVenueMembershipsInput
}

input UserUpdateOneWithoutChairSubmissionsInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutChairSubmissionsInput
  create: UserCreateWithoutChairSubmissionsInput
  delete: Boolean
  disconnect: Boolean
  update: UserUpdateWithoutChairSubmissionsInput
  upsert: UserUpsertWithoutChairSubmissionsInput
}

input UserUpdateWithoutAuthorshipsInput {
  bio: StringFieldUpdateOperationsInput
  chairSubmissions: SubmissionUpdateManyWithoutOwnerInput
  decisions: DecisionUpdateManyWithoutAuthorInput
  email: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  profilePictureUrl: NullableStringFieldUpdateOperationsInput
  relations: RelationUpdateManyWithoutUserInput
  relationsAsTarget: RelationUpdateManyWithoutTargetInput
  reviewRequests: ReviewRequestUpdateManyWithoutUserInput
  reviews: ReviewUpdateManyWithoutAuthorInput
  threadMessage: ThreadMessageUpdateManyWithoutAuthorInput
  venueMemberships: VenueMembershipUpdateManyWithoutUserInput
}

input UserUpdateWithoutChairSubmissionsInput {
  authorships: AuthorshipUpdateManyWithoutUserInput
  bio: StringFieldUpdateOperationsInput
  decisions: DecisionUpdateManyWithoutAuthorInput
  email: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  profilePictureUrl: NullableStringFieldUpdateOperationsInput
  relations: RelationUpdateManyWithoutUserInput
  relationsAsTarget: RelationUpdateManyWithoutTargetInput
  reviewRequests: ReviewRequestUpdateManyWithoutUserInput
  reviews: ReviewUpdateManyWithoutAuthorInput
  threadMessage: ThreadMessageUpdateManyWithoutAuthorInput
  venueMemberships: VenueMembershipUpdateManyWithoutUserInput
}

input UserUpdateWithoutDecisionsInput {
  authorships: AuthorshipUpdateManyWithoutUserInput
  bio: StringFieldUpdateOperationsInput
  chairSubmissions: SubmissionUpdateManyWithoutOwnerInput
  email: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  profilePictureUrl: NullableStringFieldUpdateOperationsInput
  relations: RelationUpdateManyWithoutUserInput
  relationsAsTarget: RelationUpdateManyWithoutTargetInput
  reviewRequests: ReviewRequestUpdateManyWithoutUserInput
  reviews: ReviewUpdateManyWithoutAuthorInput
  threadMessage: ThreadMessageUpdateManyWithoutAuthorInput
  venueMemberships: VenueMembershipUpdateManyWithoutUserInput
}

input UserUpdateWithoutRelationsAsTargetInput {
  authorships: AuthorshipUpdateManyWithoutUserInput
  bio: StringFieldUpdateOperationsInput
  chairSubmissions: SubmissionUpdateManyWithoutOwnerInput
  decisions: DecisionUpdateManyWithoutAuthorInput
  email: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  profilePictureUrl: NullableStringFieldUpdateOperationsInput
  relations: RelationUpdateManyWithoutUserInput
  reviewRequests: ReviewRequestUpdateManyWithoutUserInput
  reviews: ReviewUpdateManyWithoutAuthorInput
  threadMessage: ThreadMessageUpdateManyWithoutAuthorInput
  venueMemberships: VenueMembershipUpdateManyWithoutUserInput
}

input UserUpdateWithoutRelationsInput {
  authorships: AuthorshipUpdateManyWithoutUserInput
  bio: StringFieldUpdateOperationsInput
  chairSubmissions: SubmissionUpdateManyWithoutOwnerInput
  decisions: DecisionUpdateManyWithoutAuthorInput
  email: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  profilePictureUrl: NullableStringFieldUpdateOperationsInput
  relationsAsTarget: RelationUpdateManyWithoutTargetInput
  reviewRequests: ReviewRequestUpdateManyWithoutUserInput
  reviews: ReviewUpdateManyWithoutAuthorInput
  threadMessage: ThreadMessageUpdateManyWithoutAuthorInput
  venueMemberships: VenueMembershipUpdateManyWithoutUserInput
}

input UserUpdateWithoutReviewRequestsInput {
  authorships: AuthorshipUpdateManyWithoutUserInput
  bio: StringFieldUpdateOperationsInput
  chairSubmissions: SubmissionUpdateManyWithoutOwnerInput
  decisions: DecisionUpdateManyWithoutAuthorInput
  email: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  profilePictureUrl: NullableStringFieldUpdateOperationsInput
  relations: RelationUpdateManyWithoutUserInput
  relationsAsTarget: RelationUpdateManyWithoutTargetInput
  reviews: ReviewUpdateManyWithoutAuthorInput
  threadMessage: ThreadMessageUpdateManyWithoutAuthorInput
  venueMemberships: VenueMembershipUpdateManyWithoutUserInput
}

input UserUpdateWithoutReviewsInput {
  authorships: AuthorshipUpdateManyWithoutUserInput
  bio: StringFieldUpdateOperationsInput
  chairSubmissions: SubmissionUpdateManyWithoutOwnerInput
  decisions: DecisionUpdateManyWithoutAuthorInput
  email: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  profilePictureUrl: NullableStringFieldUpdateOperationsInput
  relations: RelationUpdateManyWithoutUserInput
  relationsAsTarget: RelationUpdateManyWithoutTargetInput
  reviewRequests: ReviewRequestUpdateManyWithoutUserInput
  threadMessage: ThreadMessageUpdateManyWithoutAuthorInput
  venueMemberships: VenueMembershipUpdateManyWithoutUserInput
}

input UserUpdateWithoutThreadMessageInput {
  authorships: AuthorshipUpdateManyWithoutUserInput
  bio: StringFieldUpdateOperationsInput
  chairSubmissions: SubmissionUpdateManyWithoutOwnerInput
  decisions: DecisionUpdateManyWithoutAuthorInput
  email: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  profilePictureUrl: NullableStringFieldUpdateOperationsInput
  relations: RelationUpdateManyWithoutUserInput
  relationsAsTarget: RelationUpdateManyWithoutTargetInput
  reviewRequests: ReviewRequestUpdateManyWithoutUserInput
  reviews: ReviewUpdateManyWithoutAuthorInput
  venueMemberships: VenueMembershipUpdateManyWithoutUserInput
}

input UserUpdateWithoutVenueMembershipsInput {
  authorships: AuthorshipUpdateManyWithoutUserInput
  bio: StringFieldUpdateOperationsInput
  chairSubmissions: SubmissionUpdateManyWithoutOwnerInput
  decisions: DecisionUpdateManyWithoutAuthorInput
  email: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  profilePictureUrl: NullableStringFieldUpdateOperationsInput
  relations: RelationUpdateManyWithoutUserInput
  relationsAsTarget: RelationUpdateManyWithoutTargetInput
  reviewRequests: ReviewRequestUpdateManyWithoutUserInput
  reviews: ReviewUpdateManyWithoutAuthorInput
  threadMessage: ThreadMessageUpdateManyWithoutAuthorInput
}

input UserUpsertWithoutAuthorshipsInput {
  create: UserCreateWithoutAuthorshipsInput!
  update: UserUpdateWithoutAuthorshipsInput!
}

input UserUpsertWithoutChairSubmissionsInput {
  create: UserCreateWithoutChairSubmissionsInput!
  update: UserUpdateWithoutChairSubmissionsInput!
}

input UserUpsertWithoutDecisionsInput {
  create: UserCreateWithoutDecisionsInput!
  update: UserUpdateWithoutDecisionsInput!
}

input UserUpsertWithoutRelationsAsTargetInput {
  create: UserCreateWithoutRelationsAsTargetInput!
  update: UserUpdateWithoutRelationsAsTargetInput!
}

input UserUpsertWithoutRelationsInput {
  create: UserCreateWithoutRelationsInput!
  update: UserUpdateWithoutRelationsInput!
}

input UserUpsertWithoutReviewRequestsInput {
  create: UserCreateWithoutReviewRequestsInput!
  update: UserUpdateWithoutReviewRequestsInput!
}

input UserUpsertWithoutReviewsInput {
  create: UserCreateWithoutReviewsInput!
  update: UserUpdateWithoutReviewsInput!
}

input UserUpsertWithoutThreadMessageInput {
  create: UserCreateWithoutThreadMessageInput!
  update: UserUpdateWithoutThreadMessageInput!
}

input UserUpsertWithoutVenueMembershipsInput {
  create: UserCreateWithoutVenueMembershipsInput!
  update: UserUpdateWithoutVenueMembershipsInput!
}

input UserWhereInput {
  AND: [UserWhereInput!]
  NOT: [UserWhereInput!]
  OR: [UserWhereInput!]
  authorships: AuthorshipListRelationFilter
  bio: StringFilter
  chairSubmissions: SubmissionListRelationFilter
  decisions: DecisionListRelationFilter
  email: StringFilter
  id: StringFilter
  name: StringFilter
  profilePictureUrl: StringNullableFilter
  relations: RelationListRelationFilter
  relationsAsTarget: RelationListRelationFilter
  reviewRequests: ReviewRequestListRelationFilter
  reviews: ReviewListRelationFilter
  threadMessage: ThreadMessageListRelationFilter
  venueMemberships: VenueMembershipListRelationFilter
}

input UserWhereUniqueInput {
  email: String
  id: String
}

type Venue {
  abbreviation: String
  description: String!
  id: String!
  logoRef: String
  name: String!
  role: Role
  submissionDeadline: DateTime
  submissionOpen: DateTime
  venueDate: DateTime
  websiteUrl: String
}

input VenueCreateInput {
  abbreviation: String
  decisions: DecisionCreateNestedManyWithoutVenueInput
  description: String!
  id: String
  logoRef: String
  memberships: VenueMembershipCreateNestedManyWithoutVenueInput
  name: String!
  submissionDeadline: DateTime
  submissionOpen: DateTime
  submissions: SubmissionCreateNestedManyWithoutVenueInput
  venueDate: DateTime
  websiteUrl: String
}

input VenueCreateNestedOneWithoutDecisionsInput {
  connect: VenueWhereUniqueInput
  connectOrCreate: VenueCreateOrConnectWithoutDecisionsInput
  create: VenueCreateWithoutDecisionsInput
}

input VenueCreateNestedOneWithoutMembershipsInput {
  connect: VenueWhereUniqueInput
  connectOrCreate: VenueCreateOrConnectWithoutMembershipsInput
  create: VenueCreateWithoutMembershipsInput
}

input VenueCreateNestedOneWithoutSubmissionsInput {
  connect: VenueWhereUniqueInput
  connectOrCreate: VenueCreateOrConnectWithoutSubmissionsInput
  create: VenueCreateWithoutSubmissionsInput
}

input VenueCreateOrConnectWithoutDecisionsInput {
  create: VenueCreateWithoutDecisionsInput!
  where: VenueWhereUniqueInput!
}

input VenueCreateOrConnectWithoutMembershipsInput {
  create: VenueCreateWithoutMembershipsInput!
  where: VenueWhereUniqueInput!
}

input VenueCreateOrConnectWithoutSubmissionsInput {
  create: VenueCreateWithoutSubmissionsInput!
  where: VenueWhereUniqueInput!
}

input VenueCreateWithoutDecisionsInput {
  abbreviation: String
  description: String!
  id: String
  logoRef: String
  memberships: VenueMembershipCreateNestedManyWithoutVenueInput
  name: String!
  submissionDeadline: DateTime
  submissionOpen: DateTime
  submissions: SubmissionCreateNestedManyWithoutVenueInput
  venueDate: DateTime
  websiteUrl: String
}

input VenueCreateWithoutMembershipsInput {
  abbreviation: String
  decisions: DecisionCreateNestedManyWithoutVenueInput
  description: String!
  id: String
  logoRef: String
  name: String!
  submissionDeadline: DateTime
  submissionOpen: DateTime
  submissions: SubmissionCreateNestedManyWithoutVenueInput
  venueDate: DateTime
  websiteUrl: String
}

input VenueCreateWithoutSubmissionsInput {
  abbreviation: String
  decisions: DecisionCreateNestedManyWithoutVenueInput
  description: String!
  id: String
  logoRef: String
  memberships: VenueMembershipCreateNestedManyWithoutVenueInput
  name: String!
  submissionDeadline: DateTime
  submissionOpen: DateTime
  venueDate: DateTime
  websiteUrl: String
}

type VenueMembership {
  id: Int!
  role: String!
  user: User!
  venue: Venue!
}

input VenueMembershipCreateInput {
  role: String!
  user: UserCreateNestedOneWithoutVenueMembershipsInput!
  venue: VenueCreateNestedOneWithoutMembershipsInput!
}

input VenueMembershipCreateManyUserInput {
  id: Int
  role: String!
  venueId: String!
}

input VenueMembershipCreateManyUserInputEnvelope {
  data: [VenueMembershipCreateManyUserInput!]
  skipDuplicates: Boolean
}

input VenueMembershipCreateManyVenueInput {
  id: Int
  role: String!
  userId: String!
}

input VenueMembershipCreateManyVenueInputEnvelope {
  data: [VenueMembershipCreateManyVenueInput!]
  skipDuplicates: Boolean
}

input VenueMembershipCreateNestedManyWithoutUserInput {
  connect: [VenueMembershipWhereUniqueInput!]
  connectOrCreate: [VenueMembershipCreateOrConnectWithoutUserInput!]
  create: [VenueMembershipCreateWithoutUserInput!]
  createMany: VenueMembershipCreateManyUserInputEnvelope
}

input VenueMembershipCreateNestedManyWithoutVenueInput {
  connect: [VenueMembershipWhereUniqueInput!]
  connectOrCreate: [VenueMembershipCreateOrConnectWithoutVenueInput!]
  create: [VenueMembershipCreateWithoutVenueInput!]
  createMany: VenueMembershipCreateManyVenueInputEnvelope
}

input VenueMembershipCreateOrConnectWithoutUserInput {
  create: VenueMembershipCreateWithoutUserInput!
  where: VenueMembershipWhereUniqueInput!
}

input VenueMembershipCreateOrConnectWithoutVenueInput {
  create: VenueMembershipCreateWithoutVenueInput!
  where: VenueMembershipWhereUniqueInput!
}

input VenueMembershipCreateWithoutUserInput {
  role: String!
  venue: VenueCreateNestedOneWithoutMembershipsInput!
}

input VenueMembershipCreateWithoutVenueInput {
  role: String!
  user: UserCreateNestedOneWithoutVenueMembershipsInput!
}

input VenueMembershipListRelationFilter {
  every: VenueMembershipWhereInput
  none: VenueMembershipWhereInput
  some: VenueMembershipWhereInput
}

input VenueMembershipScalarWhereInput {
  AND: [VenueMembershipScalarWhereInput!]
  NOT: [VenueMembershipScalarWhereInput!]
  OR: [VenueMembershipScalarWhereInput!]
  id: IntFilter
  role: StringFilter
  userId: StringFilter
  venueId: StringFilter
}

input VenueMembershipUpdateManyMutationInput {
  role: StringFieldUpdateOperationsInput
}

input VenueMembershipUpdateManyWithWhereWithoutUserInput {
  data: VenueMembershipUpdateManyMutationInput!
  where: VenueMembershipScalarWhereInput!
}

input VenueMembershipUpdateManyWithWhereWithoutVenueInput {
  data: VenueMembershipUpdateManyMutationInput!
  where: VenueMembershipScalarWhereInput!
}

input VenueMembershipUpdateManyWithoutUserInput {
  connect: [VenueMembershipWhereUniqueInput!]
  connectOrCreate: [VenueMembershipCreateOrConnectWithoutUserInput!]
  create: [VenueMembershipCreateWithoutUserInput!]
  createMany: VenueMembershipCreateManyUserInputEnvelope
  delete: [VenueMembershipWhereUniqueInput!]
  deleteMany: [VenueMembershipScalarWhereInput!]
  disconnect: [VenueMembershipWhereUniqueInput!]
  set: [VenueMembershipWhereUniqueInput!]
  update: [VenueMembershipUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [VenueMembershipUpdateManyWithWhereWithoutUserInput!]
  upsert: [VenueMembershipUpsertWithWhereUniqueWithoutUserInput!]
}

input VenueMembershipUpdateManyWithoutVenueInput {
  connect: [VenueMembershipWhereUniqueInput!]
  connectOrCreate: [VenueMembershipCreateOrConnectWithoutVenueInput!]
  create: [VenueMembershipCreateWithoutVenueInput!]
  createMany: VenueMembershipCreateManyVenueInputEnvelope
  delete: [VenueMembershipWhereUniqueInput!]
  deleteMany: [VenueMembershipScalarWhereInput!]
  disconnect: [VenueMembershipWhereUniqueInput!]
  set: [VenueMembershipWhereUniqueInput!]
  update: [VenueMembershipUpdateWithWhereUniqueWithoutVenueInput!]
  updateMany: [VenueMembershipUpdateManyWithWhereWithoutVenueInput!]
  upsert: [VenueMembershipUpsertWithWhereUniqueWithoutVenueInput!]
}

input VenueMembershipUpdateWithWhereUniqueWithoutUserInput {
  data: VenueMembershipUpdateWithoutUserInput!
  where: VenueMembershipWhereUniqueInput!
}

input VenueMembershipUpdateWithWhereUniqueWithoutVenueInput {
  data: VenueMembershipUpdateWithoutVenueInput!
  where: VenueMembershipWhereUniqueInput!
}

input VenueMembershipUpdateWithoutUserInput {
  role: StringFieldUpdateOperationsInput
  venue: VenueUpdateOneRequiredWithoutMembershipsInput
}

input VenueMembershipUpdateWithoutVenueInput {
  role: StringFieldUpdateOperationsInput
  user: UserUpdateOneRequiredWithoutVenueMembershipsInput
}

input VenueMembershipUpsertWithWhereUniqueWithoutUserInput {
  create: VenueMembershipCreateWithoutUserInput!
  update: VenueMembershipUpdateWithoutUserInput!
  where: VenueMembershipWhereUniqueInput!
}

input VenueMembershipUpsertWithWhereUniqueWithoutVenueInput {
  create: VenueMembershipCreateWithoutVenueInput!
  update: VenueMembershipUpdateWithoutVenueInput!
  where: VenueMembershipWhereUniqueInput!
}

input VenueMembershipWhereInput {
  AND: [VenueMembershipWhereInput!]
  NOT: [VenueMembershipWhereInput!]
  OR: [VenueMembershipWhereInput!]
  id: IntFilter
  role: StringFilter
  user: UserWhereInput
  userId: StringFilter
  venue: VenueWhereInput
  venueId: StringFilter
}

input VenueMembershipWhereUniqueInput {
  id: Int
}

input VenueUpdateInput {
  abbreviation: NullableStringFieldUpdateOperationsInput
  decisions: DecisionUpdateManyWithoutVenueInput
  description: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  logoRef: NullableStringFieldUpdateOperationsInput
  memberships: VenueMembershipUpdateManyWithoutVenueInput
  name: StringFieldUpdateOperationsInput
  submissionDeadline: NullableDateTimeFieldUpdateOperationsInput
  submissionOpen: NullableDateTimeFieldUpdateOperationsInput
  submissions: SubmissionUpdateManyWithoutVenueInput
  venueDate: NullableDateTimeFieldUpdateOperationsInput
  websiteUrl: NullableStringFieldUpdateOperationsInput
}

input VenueUpdateOneRequiredWithoutDecisionsInput {
  connect: VenueWhereUniqueInput
  connectOrCreate: VenueCreateOrConnectWithoutDecisionsInput
  create: VenueCreateWithoutDecisionsInput
  update: VenueUpdateWithoutDecisionsInput
  upsert: VenueUpsertWithoutDecisionsInput
}

input VenueUpdateOneRequiredWithoutMembershipsInput {
  connect: VenueWhereUniqueInput
  connectOrCreate: VenueCreateOrConnectWithoutMembershipsInput
  create: VenueCreateWithoutMembershipsInput
  update: VenueUpdateWithoutMembershipsInput
  upsert: VenueUpsertWithoutMembershipsInput
}

input VenueUpdateOneRequiredWithoutSubmissionsInput {
  connect: VenueWhereUniqueInput
  connectOrCreate: VenueCreateOrConnectWithoutSubmissionsInput
  create: VenueCreateWithoutSubmissionsInput
  update: VenueUpdateWithoutSubmissionsInput
  upsert: VenueUpsertWithoutSubmissionsInput
}

input VenueUpdateWithoutDecisionsInput {
  abbreviation: NullableStringFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  logoRef: NullableStringFieldUpdateOperationsInput
  memberships: VenueMembershipUpdateManyWithoutVenueInput
  name: StringFieldUpdateOperationsInput
  submissionDeadline: NullableDateTimeFieldUpdateOperationsInput
  submissionOpen: NullableDateTimeFieldUpdateOperationsInput
  submissions: SubmissionUpdateManyWithoutVenueInput
  venueDate: NullableDateTimeFieldUpdateOperationsInput
  websiteUrl: NullableStringFieldUpdateOperationsInput
}

input VenueUpdateWithoutMembershipsInput {
  abbreviation: NullableStringFieldUpdateOperationsInput
  decisions: DecisionUpdateManyWithoutVenueInput
  description: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  logoRef: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  submissionDeadline: NullableDateTimeFieldUpdateOperationsInput
  submissionOpen: NullableDateTimeFieldUpdateOperationsInput
  submissions: SubmissionUpdateManyWithoutVenueInput
  venueDate: NullableDateTimeFieldUpdateOperationsInput
  websiteUrl: NullableStringFieldUpdateOperationsInput
}

input VenueUpdateWithoutSubmissionsInput {
  abbreviation: NullableStringFieldUpdateOperationsInput
  decisions: DecisionUpdateManyWithoutVenueInput
  description: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  logoRef: NullableStringFieldUpdateOperationsInput
  memberships: VenueMembershipUpdateManyWithoutVenueInput
  name: StringFieldUpdateOperationsInput
  submissionDeadline: NullableDateTimeFieldUpdateOperationsInput
  submissionOpen: NullableDateTimeFieldUpdateOperationsInput
  venueDate: NullableDateTimeFieldUpdateOperationsInput
  websiteUrl: NullableStringFieldUpdateOperationsInput
}

input VenueUpsertWithoutDecisionsInput {
  create: VenueCreateWithoutDecisionsInput!
  update: VenueUpdateWithoutDecisionsInput!
}

input VenueUpsertWithoutMembershipsInput {
  create: VenueCreateWithoutMembershipsInput!
  update: VenueUpdateWithoutMembershipsInput!
}

input VenueUpsertWithoutSubmissionsInput {
  create: VenueCreateWithoutSubmissionsInput!
  update: VenueUpdateWithoutSubmissionsInput!
}

input VenueWhereInput {
  AND: [VenueWhereInput!]
  NOT: [VenueWhereInput!]
  OR: [VenueWhereInput!]
  abbreviation: StringNullableFilter
  decisions: DecisionListRelationFilter
  description: StringFilter
  id: StringFilter
  logoRef: StringNullableFilter
  memberships: VenueMembershipListRelationFilter
  name: StringFilter
  submissionDeadline: DateTimeNullableFilter
  submissionOpen: DateTimeNullableFilter
  submissions: SubmissionListRelationFilter
  venueDate: DateTimeNullableFilter
  websiteUrl: StringNullableFilter
}

input VenueWhereUniqueInput {
  id: String
}
