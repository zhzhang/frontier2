### This file was generated by Nexus Schema
### Do not make changes to this file directly


type Article {
  acceptedOrganizations: [Organization]
  anonymous: Boolean!
  authors: [User]
  id: String!
  reviews(after: ReviewWhereUniqueInput, before: ReviewWhereUniqueInput, first: Int, last: Int, where: ArticleReviewsWhereInput): [Review!]!
  title: String!
  versions: [ArticleVersion!]!
}

input ArticleReviewsWhereInput {
  published: BoolFilter
}

type ArticleVersion {
  abstract: String!
  createdAt: DateTime!
  id: String!
  ref: String
  versionNumber: Int!
}

input BoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

type Decision {
  article: Article
  author: User
  body: String
  citedReviews: [Review]
  decision: Boolean
  id: String
  organization: Organization
}

type Mutation {
  assignReviewers(reviewerIds: [String!]!, submissionId: String!): Submission
  assignSubmissionOwner(submissionId: String!, userId: String!): Submission
  createArticle(abstract: String!, authorIds: [String!]!, organizationId: String, ref: String!, title: String!): Article
  createOrganization(abbreviation: String, description: String!, logoRef: String, name: String!): Organization
  createReview(articleId: String!, submissionId: String): Review
  updateOrganization(abbreviation: String, description: String, id: String!, logoRef: String, name: String): Organization
  updateOrganizationMembership(action: String!, organizationId: String!, role: Role!, userId: String!): Organization
  updateReview(body: String!, id: String!, published: Boolean!, rating: Int!): Review
}

input NestedBoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

type Organization {
  abbreviation: String
  accepted: [Decision]
  admins: [User]
  description: String
  editors: [User]
  id: String
  logoRef: String
  name: String
  role: Role
  submissions: [Submission]
  venues: [Venue]
}

type Query {
  article(id: String!): Article
  articleVersions: [ArticleVersion]
  articles: [Article]
  browseOrganizations(tags: [String]): [Organization]
  decisions(articleId: String!): [Decision]
  organization(id: String!): Organization
  review(reviewId: String!): Review
  reviewerAssignedSubmissions: [Submission]
  reviews(articleId: String!): [Review]
  searchEditors(organizationId: String!, query: String): [User]
  searchUsers(query: String): [User]
  user(id: String!): User
  userArticles(id: String!): [Article]
}

type Review {
  articleVersion: Int
  author: User
  body: String
  canAccess: Boolean
  highlights: String
  id: String
  organization: Organization
  published: Boolean
  rating: Int
  reviewNumber: Int
  submission: Submission
  threadMessages: [ThreadMessage]
}

input ReviewWhereUniqueInput {
  id: String
}

enum Role {
  ACTION_EDITOR
  ADMIN
  NONE
}

type Submission {
  article: Article
  articleId: String
  id: String
  organization: Organization
  organizationId: String
  owner: User
  requestedReviewers: [User]
}

type ThreadMessage {
  articleVersion: Int
  author: User
  body: String
  createdAt: String
  highlights: String
  id: String
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

type User {
  articles: [Article]
  email: String!
  id: String!
  name: String!
}

type Venue {
  abbreviation: String
  id: String
  name: String
}
