generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  email                   String                   @unique
  id                      String                   @id
  name                    String?
  articles                Article[]
  reviews                 Review[]
  organizationMemberships OrganizationMembership[]
  MetaReview              MetaReview[]             @relation("chair")
}

model Article {
  id          String           @id @default(cuid())
  title       String
  authors     User[]
  reviews     Review[]
  versions    ArticleVersion[]
  metaReviews MetaReview[]
}

model ArticleVersion {
  id            String   @id @default(cuid())
  abstract      String
  ref           String
  article       Article  @relation(fields: [articleId], references: [id])
  articleId     String
  versionNumber Int
  createdAt     DateTime @default(now())
}

model Organization {
  id          String                   @id @default(cuid())
  name        String
  abbreviation String
  description String?
  logoRef     String?
  memberships OrganizationMembership[]
  reviews     Review[]
  metaReviews MetaReview[]
}

model OrganizationMembership {
  id             String       @id @default(cuid())
  user           User         @relation(fields: [userId], references: [id])
  organization   Organization @relation(fields: [organizationId], references: [id])
  role           String
  userId         String
  organizationId String
}

model Review {
  id             String        @id @default(cuid())
  body           String        @default("")
  rating         Int           @default(0)
  article        Article       @relation(fields: [articleId], references: [id])
  author         User          @relation(fields: [authorId], references: [id])
  articleId      String
  authorId       String
  organization   Organization? @relation(fields: [organizationId], references: [id])
  organizationId String?
  reviewNumber   Int
  published      Boolean       @default(false)
  canAccess      Boolean       @default(true)
  MetaReview     MetaReview?   @relation(fields: [metaReviewId], references: [id])
  metaReviewId   String?
}

model MetaReview {
  id             String        @id @default(cuid())
  body           String        @default("")
  decision       Boolean       @default(false)
  citedReviews   Review[]
  article        Article       @relation(fields: [articleId], references: [id])
  articleId      String
  organization   Organization? @relation(fields: [organizationId], references: [id])
  organizationId String?
  author         User          @relation("chair", fields: [authorId], references: [id])
  authorId       String
}
